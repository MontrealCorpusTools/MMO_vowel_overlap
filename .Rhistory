group_by(speaker, vowel, context) %>%
mean_qi()
View(sp_estimates)
sp_estimates %>%
ungroup() %>%
ggplot(aes(x=context, y=F1, color=vowel)) +
geom_point() +
geom_line(aes(group=interaction(vowel, speaker)))
library(patchwork)
sp_estimates %>%
ungroup() %>%
ggplot(aes(x=context, y=F1, color=vowel)) +
geom_point() +
geom_line(aes(group=interaction(vowel, speaker)))
raleigh_data %>%
group_by(speaker, vowel, context) %>%
summarize(F1=mean(F1)) %>%
ungroup() %>%
ggplot(aes(x=context, y=F1, color=vowel)) +
geom_point() +
geom_line(aes(group=interaction(vowel, speaker)))
sp_estimates %>%
ggplot(aes(x=context, y=F2, color=vowel)) +
geom_point() +
geom_line(aes(group=interaction(vowel, speaker)))
raleigh_data %>%
group_by(speaker, vowel, context) %>%
summarize(F1=mean(F1)) %>%
ungroup() %>%
ggplot(aes(x=context, y=F2, color=vowel)) +
geom_point() +
geom_line(aes(group=interaction(vowel, speaker)))
sp_estimates %>%
ggplot(aes(x=context, y=F2, color=vowel)) +
geom_point() +
geom_line(aes(group=interaction(vowel, speaker)))
raleigh_data %>%
group_by(speaker, vowel, context) %>%
summarize(F2=mean(F2)) %>%
ungroup() %>%
ggplot(aes(x=context, y=F2, color=vowel)) +
geom_point() +
geom_line(aes(group=interaction(vowel, speaker)))
sp_estimates %>%
ggplot(aes(x=F2, y=F1, color=vowel, shape=context)) +
geom_point() +
geom_line(aes(group=interaction(vowel, speaker))) +
scale_x_reverse() + scale_y_reverse()
raleigh_data %>%
group_by(speaker, vowel, context) %>%
summarize(across(c(F1, F2), mean)) %>%
ungroup() %>%
ggplot(aes(x=F2, y=F1, color=vowel, shape=context)) +
geom_point() +
geom_line(aes(group=interaction(vowel, speaker))) +
scale_x_reverse() + scale_y_reverse()
sp_estimates %>%
ggplot(aes(x=F2, y=F1, color=vowel, shape=context)) +
geom_point() +
stat_ellipse(data=predicted_sp_int, aes(lty=context),
level=0.66, alpha=0.25) +
geom_line(aes(group=interaction(vowel, speaker))) +
scale_x_reverse() + scale_y_reverse()
fitted_sp_int <- nd2 %>%
add_epred_draws(model,
re_formula = ~(1+context*vowel|
q|speaker),
ndraws=num_draws) %>%
ungroup() %>%
pivot_wider(names_from=".category", values_from=".epred")
predicted_sp_int <- nd2 %>%
add_predicted_draws(model,
re_formula = ~(1+context*vowel|
q|speaker),
ndraws=num_draws) %>%
ungroup() %>%
pivot_wider(names_from=".category", values_from=".prediction")
sp_estimates <- fitted_sp_int %>%
group_by(speaker, vowel, context) %>%
mean_qi() %>%
ungroup()
sp_estimates %>%
ggplot(aes(x=context, y=F1, color=vowel)) +
geom_point() +
geom_line(aes(group=interaction(vowel, speaker)))
raleigh_data %>%
group_by(speaker, vowel, context) %>%
summarize(F1=mean(F1)) %>%
ungroup() %>%
ggplot(aes(x=context, y=F1, color=vowel)) +
geom_point() +
geom_line(aes(group=interaction(vowel, speaker)))
sp_estimates %>%
ggplot(aes(x=context, y=F2, color=vowel)) +
geom_point() +
geom_line(aes(group=interaction(vowel, speaker)))
raleigh_data %>%
group_by(speaker, vowel, context) %>%
summarize(F2=mean(F2)) %>%
ungroup() %>%
ggplot(aes(x=context, y=F2, color=vowel)) +
geom_point() +
geom_line(aes(group=interaction(vowel, speaker)))
sp_estimates %>%
ggplot(aes(x=F2, y=F1, color=vowel, shape=context)) +
geom_point() +
stat_ellipse(data=predicted_sp_int, aes(lty=context),
level=0.66, alpha=0.25) +
geom_line(aes(group=interaction(vowel, speaker))) +
scale_x_reverse() + scale_y_reverse()
raleigh_data %>%
group_by(speaker, vowel, context) %>%
summarize(across(c(F1, F2), mean)) %>%
ungroup() %>%
ggplot(aes(x=F2, y=F1, color=vowel, shape=context)) +
geom_point() +
geom_line(aes(group=interaction(vowel, speaker))) +
scale_x_reverse() + scale_y_reverse()
sp_estimates %>%
ggplot(aes(x=F2, y=F1, color=vowel, shape=context)) +
geom_point() +
stat_ellipse(data=fitted_sp_int, aes(lty=context),
level=0.66, alpha=0.25) +
geom_line(aes(group=interaction(vowel, speaker))) +
scale_x_reverse() + scale_y_reverse()
sp_estimates %>%
ggplot(aes(x=F2, y=F1, color=vowel, shape=context)) +
geom_point() +
stat_ellipse(data=fitted_sp_int, aes(group=speaker, lty=context),
level=0.66, alpha=0.25) +
geom_line(aes(group=interaction(vowel, speaker))) +
scale_x_reverse() + scale_y_reverse()
sp_estimates %>%
ggplot(aes(x=F2, y=F1, color=vowel, shape=context)) +
geom_point() +
stat_ellipse(data=fitted_sp_int,
aes(group=interaction(speaker, vowel, context), lty=context),
level=0.66, alpha=0.25) +
geom_line(aes(group=interaction(vowel, speaker))) +
scale_x_reverse() + scale_y_reverse()
predicted_sp_int %>%
ggplot(aes(x=F2, y=F1, color=vowel, lty=context)) +
stat_ellipse(level=0.66) +
stat_ellipse(data=raleigh_data, level=0.66, alpha=0.25) +
facet_wrap(~speaker)
install.packages("patchwork")
library(patchwork)
num_points=25
predicted_sp_BA <- nd2 %>%
rep_df(num_points) %>%
add_predicted_draws(model,
re_formula = ~(1+context*vowel|
q|speaker),
ndraws=num_draws) %>%
ungroup() %>%
pivot_wider(names_from=".category", values_from=".prediction")
rep_df <- function(df, n_reps)
{
df_repeated <- do.call("rbind", replicate(n_reps, df, simplify = FALSE))
}
predicted_sp_BA <- nd2 %>%
rep_df(num_points) %>%
add_predicted_draws(model,
re_formula = ~(1+context*vowel|
q|speaker),
ndraws=num_draws) %>%
ungroup() %>%
pivot_wider(names_from=".category", values_from=".prediction")
View(predicted_sp_BA)
bhatt <- function (F1, F2, vowel)
{
vowel_data <- droplevels(data.frame(vowel))
sp_df <- tryCatch(
expr=SpatialPointsDataFrame(na.omit(cbind(F1, F2)), vowel_data),
error=function(e){NA})
tryCatch(
expr = {kerneloverlap(sp_df, method='BA')[1,2]},
error = function(e){NA})
}
BA_raw_sp <- raleigh_data %>%
group_by(speaker, context) %>%
summarise(bhatt_aff = bhatt(F1, F2, vowel)) %>%
ungroup()
View(BA_raw_sp)
BA_mod_sp <- predicted_sp_BA %>%
group_by(speaker, context, .draw) %>% # calcualte for each speaker, context, AND draw
summarise(bhatt_aff = bhatt(F1, F2, vowel)) %>%
ungroup()
View(BA_mod_sp)
? add_predicted_draws
fitted_av_int <- nd1 %>%
add_epred_draws(model,
re_formula=NA, # needs to be NA (which keeps it empty), rather than NULL, which is the "default," i.e., complete random effects structure
ndraws=num_draws) %>%
ungroup() %>%
pivot_wider(names_from=".category", values_from=".epred")
View(fitted_av_int)
predicted_av_int <- nd1 %>%
add_predicted_draws(model,
re_formula=NA,
ndraws=num_draws) %>%
ungroup() %>%
pivot_wider(names_from=".category", values_from=".prediction")
predicted_av_BA <- nd1 %>%
rep_df(num_points) %>%
add_predicted_draws(model,
re_formula=NA,
ndraws=num_draws) %>%
ungroup() %>%
pivot_wider(names_from=".category", values_from=".prediction")
View(predicted_av_BA)
BA_mod_av <- predicted_av_BA %>%
group_by(context, .draw) %>% # calculate for each context draw
summarise(bhatt_aff = bhatt(F1, F2, vowel)) %>%
ungroup()
View(BA_mod_av)
ED_raw_sp <- raleigh_data %>%
group_by(speaker, context, vowel) %>%
# first, find the average for speaker, conctext, vowel pair
summarise(F1=mean(F1),
F2=mean(F2))
View(ED_raw_sp)
ED_raw_sp <- raleigh_data %>%
group_by(speaker, context, vowel) %>%
# first, find the average for speaker, context, vowel pair
summarise(F1=mean(F1),
F2=mean(F2)) %>%
ungroup() %>%
pivot_wider(names_from="vowel", values_from=c("F1", "F2")) %>%
mutate(eucl_dist = sqrt((F1_i - F1_e)^2 + (F2_i - F2_e)^2))
ED_mod_sp <- fitted_sp_int %>%
dplyr::select(-.row, -.chain, -.iteration) %>%
# reshape the dataframe so that "i" and "e" are in separate columns
pivot_wider(names_from="vowel", values_from=c("F1", "F2"))
View(BA_mod_sp)
View(ED_mod_sp)
ED_mod_sp <- fitted_sp_int %>%
dplyr::select(-.row, -.chain, -.iteration) %>%
# reshape the dataframe so that "i" and "e" are in separate columns
pivot_wider(names_from="vowel", values_from=c("F1", "F2")) %>%
# now apply the pythagorean theorem, which defines Euclidean distance
mutate(eucl_dist = sqrt((F1_i - F1_e)^2 + (F2_i - F2_e)^2))
ED_mod_av <- fitted_av_int %>%
dplyr::select(-.row, -.chain, -.iteration) %>%
# reshape the dataframe so that "i" and "e" are in separate columns
pivot_wider(names_from="vowel", values_from=c("F1", "F2")) %>%
# now apply the pythagorean theorem, which defines Euclidean distance
mutate(eucl_dist = sqrt((F1_i - F1_e)^2 + (F2_i - F2_e)^2))
View(ED_mod_av)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(tidybayes)
library(wesanderson)
library(adehabitatHR)
NorthTown_raw <- readRDS("../data/eval_2_revisions/SLAAP-NorthTown_US_South_data.rds")
sp_predicted <- readRDS("../data/predicted_dataframes/Interspeech/predicted_sp.rds")
setwd("C:/Users/warbl/Documents/GitHub/PIN-PEN-merger/scripts")
sp_predicted <- readRDS("../data/predicted_dataframes/Interspeech/predicted_sp.rds")
av_predicted <- readRDS("../data/predicted_dataframes/Interspeech/predicted_av.rds")
sp_fitted <- readRDS("../data/predicted_dataframes/Interspeech/fitted_sp.rds")
av_fitted <- readRDS("../data/predicted_dataframes/Interspeech/fitted_av.rds")
vowel_levels=c("i", "e")
vowel_labels=c("/ɪ/", "/ɛ/") # sprintf('/\u026A/')
model_structure_levels=c("raw", "averaged", "m1", "m2")
model_structure_labels=c("raw", "averaged", "minimal", "expanded")
model_type_levels=c("empirical", "m", "u")
model_type_labels=c("empirical", "multivariate", "univariate")
corpus_levels=c("SLAAP-NorthTown", "Sunset", "Hastings", "SOTC")
corpus_labels=c("US South", "North Am.", "Eng. South", "Scotland")
model_levels=levels=c("empirical\nraw", "empirical\naveraged",
"univariate\nminimal", "multivariate\nminimal",
"univariate\nexpanded", "multivariate\nexpanded")
colors <- wes_palette("Cavalcanti1", n=2)
sp_data <- sp_predicted %>%
bind_rows(dplyr::select(data_raw, -word)) %>%
bind_rows(dplyr::select(data_ave, -word)) %>%
mutate(stressed_vowel=factor(stressed_vowel, levels=vowel_levels, labels=vowel_labels),
model_structure=factor(model_structure, levels=model_structure_levels, labels=model_structure_labels),
model_type=factor(model_type, levels=model_type_levels, labels=model_type_labels),
corpus=factor(corpus, levels=corpus_levels, labels=corpus_labels)) %>%
mutate(model=paste(model_type, model_structure, sep="\n")) %>%
mutate(model=factor(model, levels=model_levels, labels=model_levels))
NorthTown_raw <- readRDS("../data/eval_2_revisions/SLAAP-NorthTown_US_South_data.rds")
Sunset_raw <- readRDS("../data/eval_2_revisions/Sunset_US_West_data.rds")
Hastings_raw <- readRDS("../data/eval_2_revisions/Hastings_England_East_data.rds")
SOTC_raw <- readRDS("../data/eval_2_revisions/SOTC_Scotland_West_data.rds")
data_raw <- bind_rows(`SLAAP-NorthTown` = NorthTown_raw,
`Sunset` = Sunset_raw,
`Hastings` = Hastings_raw,
`SOTC` = SOTC_raw,
.id = "corpus") %>%
dplyr::select(speaker, word, context, stressed_vowel, zF1, zF2, corpus) %>%
mutate(model_type="empirical",
model_structure="raw")
data_ave <- data_raw %>%
group_by(corpus, speaker, word) %>%
summarise(zF1=mean(zF1),
zF2=mean(zF2),
context=first(context),
stressed_vowel=first(stressed_vowel)) %>%
ungroup() %>%
mutate(model_type="empirical",
model_structure="averaged")
vowel_levels=c("i", "e")
vowel_labels=c("/ɪ/", "/ɛ/") # sprintf('/\u026A/')
model_structure_levels=c("raw", "averaged", "m1", "m2")
model_structure_labels=c("raw", "averaged", "minimal", "expanded")
model_type_levels=c("empirical", "m", "u")
model_type_labels=c("empirical", "multivariate", "univariate")
corpus_levels=c("SLAAP-NorthTown", "Sunset", "Hastings", "SOTC")
corpus_labels=c("US South", "North Am.", "Eng. South", "Scotland")
model_levels=levels=c("empirical\nraw", "empirical\naveraged",
"univariate\nminimal", "multivariate\nminimal",
"univariate\nexpanded", "multivariate\nexpanded")
colors <- wes_palette("Cavalcanti1", n=2)
sp_data <- sp_predicted %>%
bind_rows(dplyr::select(data_raw, -word)) %>%
bind_rows(dplyr::select(data_ave, -word)) %>%
mutate(stressed_vowel=factor(stressed_vowel, levels=vowel_levels, labels=vowel_labels),
model_structure=factor(model_structure, levels=model_structure_levels, labels=model_structure_labels),
model_type=factor(model_type, levels=model_type_levels, labels=model_type_labels),
corpus=factor(corpus, levels=corpus_levels, labels=corpus_labels)) %>%
mutate(model=paste(model_type, model_structure, sep="\n")) %>%
mutate(model=factor(model, levels=model_levels, labels=model_levels))
av_data <- av_predicted %>%
bind_rows(dplyr::select(data_raw, -word, -speaker)) %>%
bind_rows(dplyr::select(data_ave, -word, -speaker)) %>%
mutate(stressed_vowel=factor(stressed_vowel, levels=vowel_levels, labels=vowel_labels),
model_structure=factor(model_structure, levels=model_structure_levels, labels=model_structure_labels),
model_type=factor(model_type, levels=model_type_levels, labels=model_type_labels),
corpus=factor(corpus, levels=corpus_levels, labels=corpus_labels)) %>%
mutate(model=paste(model_type, model_structure, sep="\n")) %>%
mutate(model=factor(model, levels=model_levels, labels=model_levels))
BA_raw_sp <- data_raw %>%
group_by(corpus, speaker, context) %>%
summarise(bhatt_aff = bhatt(zF1, zF2, stressed_vowel),
model_type=first(model_type),
model_structure=first(model_structure)) %>%
ungroup()
bhatt <- function (F1, F2, vowel)
{
vowel_data <- droplevels(data.frame(vowel))
sp_df <- tryCatch(
expr=SpatialPointsDataFrame(na.omit(cbind(F1, F2)), vowel_data),
error=function(e){NA})
tryCatch(
expr = {kerneloverlap(sp_df, method='BA')[1,2]},
error = function(e){NA})
}
BA_raw_sp <- data_raw %>%
group_by(corpus, speaker, context) %>%
summarise(bhatt_aff = bhatt(zF1, zF2, stressed_vowel),
model_type=first(model_type),
model_structure=first(model_structure)) %>%
ungroup()
BA_ave_sp <- data_ave %>%
group_by(corpus, speaker, context) %>%
summarise(bhatt_aff = bhatt(zF1, zF2, stressed_vowel),
model_type=first(model_type),
model_structure=first(model_structure)) %>%
ungroup()
BA_sp <- readRDS("../data/BA_calcs/Interspeech/bhattacharyya_affs_sp.rds") %>%
mutate(model_type = str_split_fixed(corpus, "_", 3)[,2],
model_structure = str_split_fixed(corpus, "_", 3)[,3],
corpus = str_split_fixed(corpus, "_", 3)[,1]) %>%
bind_rows(BA_raw_sp, BA_ave_sp) %>%
mutate(model_structure=factor(model_structure, levels=model_structure_levels,
labels=model_structure_labels),
model_type=factor(model_type, levels=model_type_levels,
labels=model_type_labels),
corpus=factor(corpus, levels=corpus_levels,
labels=corpus_labels)) %>%
mutate(model=paste(model_type, model_structure, sep="\n")) %>%
mutate(model=factor(model, levels=model_levels))
BA_av <- readRDS("../data/BA_calcs/Interspeech/bhattacharyya_affs_av.rds") %>%
mutate(model_type = str_split_fixed(corpus, "_", 3)[,2],
model_structure = str_split_fixed(corpus, "_", 3)[,3],
corpus = str_split_fixed(corpus, "_", 3)[,1]) %>%
bind_rows(dplyr::select(BA_raw_sp, -speaker), dplyr::select(BA_ave_sp, -speaker)) %>%
mutate(model_structure=factor(model_structure, levels=model_structure_levels,
labels=model_structure_labels),
model_type=factor(model_type, levels=model_type_levels,
labels=model_type_labels),
corpus=factor(corpus, levels=corpus_levels,
labels=corpus_labels)) %>%
mutate(model=paste(model_type, model_structure, sep="\n")) %>%
mutate(model=factor(model, levels=model_levels))
ED_raw_sp <- data_raw %>%
group_by(corpus, speaker, context, stressed_vowel) %>%
summarise(zF1=mean(zF1),
zF2=mean(zF2),
model_type=first(model_type),
model_structure=first(model_structure)) %>%
ungroup() %>%
pivot_wider(names_from="stressed_vowel", values_from=c("zF1", "zF2")) %>%
mutate(eucl_dist = sqrt((zF1_i - zF1_e)^2 + (zF2_i - zF2_e)^2))
ED_ave_sp <- data_ave %>%
group_by(corpus, speaker, context, stressed_vowel) %>%
summarise(zF1=mean(zF1),
zF2=mean(zF2),
model_type=first(model_type),
model_structure=first(model_structure)) %>%
ungroup() %>%
pivot_wider(names_from="stressed_vowel", values_from=c("zF1", "zF2")) %>%
mutate(eucl_dist = sqrt((zF1_i - zF1_e)^2 + (zF2_i - zF2_e)^2))
ED_sp <- sp_fitted %>%
dplyr::select(-.row, -.chain, -.iteration) %>%
pivot_wider(names_from="stressed_vowel", values_from=c("zF1", "zF2")) %>%
mutate(eucl_dist = sqrt((zF1_i - zF1_e)^2 + (zF2_i - zF2_e)^2)) %>%
bind_rows(ED_raw_sp, ED_ave_sp) %>%
mutate(model_structure=factor(model_structure, levels=model_structure_levels,
labels=model_structure_labels),
model_type=factor(model_type, levels=model_type_levels,
labels=model_type_labels),
corpus=factor(corpus, levels=corpus_levels,
labels=corpus_labels)) %>%
mutate(model=paste(model_type, model_structure, sep="\n")) %>%
mutate(model=factor(model, levels=model_levels))
ED_av <- av_fitted %>%
dplyr::select(-.row, -.chain, -.iteration) %>%
pivot_wider(names_from="stressed_vowel", values_from=c("zF1", "zF2")) %>%
mutate(eucl_dist = sqrt((zF1_i - zF1_e)^2 + (zF2_i - zF2_e)^2)) %>%
bind_rows(dplyr::select(ED_raw_sp, -speaker), dplyr::select(ED_ave_sp, -speaker)) %>%
mutate(model_structure=factor(model_structure, levels=model_structure_levels,
labels=model_structure_labels),
model_type=factor(model_type, levels=model_type_levels,
labels=model_type_labels),
corpus=factor(corpus, levels=corpus_levels,
labels=corpus_labels)) %>%
mutate(model=paste(model_type, model_structure, sep="\n")) %>%
mutate(model=factor(model, levels=model_levels))
# ED_av <- av_fitted %>%
#   dplyr::select(-.row, -.chain, -.iteration) %>%
#   pivot_wider(names_from="stressed_vowel", values_from=c("zF1", "zF2")) %>%
#   mutate(eucl_dist = sqrt((zF1_i - zF1_e)^2 + (zF2_i - zF2_e)^2)) %>%
#   mutate(model_structure=factor(model_structure, levels=c("m1", "m2"), labels=c("minimal", "controls")),
#          model_type=factor(model_type, levels=c("m", "u"), labels=c("multivariate", "univariate")),
#          corpus=factor(corpus, levels=c("SLAAP-NorthTown", "Sunset", "Hastings", "SOTC"),
#                        labels=c("US South", "North Am.", "England South", "Scotland")))
av_data %>%
filter(model_structure!="averaged", model_type!="univariate") %>%
ggplot(aes(x=zF2, y=zF1)) +
# geom_point(alpha=0.001, aes(color=context)) +
stat_ellipse(size=0.3, level=0.1, aes(color=context, lty=stressed_vowel)) +
# geom_point(alpha=0.5, aes(color=context)) +
facet_grid(model_structure~corpus) +
scale_x_reverse() + scale_y_reverse() +
scale_color_manual(values=colors) +
coord_fixed() +
theme_bw() +
theme(axis.text.x=element_text(angle=90, hjust=1, vjust=0.5, size=6),
axis.text.y=element_text(size=6),
# axis.title.x=element_text(margin=margin(t=0, b=0)),
legend.position="bottom", legend.title=element_blank(),
legend.text=element_text(size=8),
legend.margin=margin(t=0, r=0, b=0, l=0, unit="pt"),
legend.box.margin=margin(t=0, r=0, b=0, l=0, unit="pt"),
# strip.clip="off",
plot.margin=margin(t=0, r=0, b=0, l=0, unit="pt"),
panel.spacing=unit(0.75, "mm"),
strip.text=element_text(size=8), axis.title=element_text(size=8))
BA_sp %>%
group_by(speaker, model, context, corpus) %>%
summarise(bhatt_aff = mean(bhatt_aff)) %>%
pivot_wider(names_from="context", values_from="bhatt_aff") %>%
ggplot(aes(x=oral, y=nasal)) +
geom_point(size=1, alpha=0.25) +
facet_grid(model~corpus) +
geom_abline(size=0.3, lty=3) +
xlab("preoral Bhattacharyya affinity") +
ylab("prenasal Bhattacharyya affinity") +
xlim(0,1) + ylim(0,1) +
coord_fixed() +
theme_bw(base_size=10) +
theme(axis.text.x=element_text(angle=90, hjust=1, vjust=0.5, size=6),
axis.text.y=element_text(size=6),
# axis.title.x=element_text(margin=margin(t=0, b=0)),
legend.position="top", legend.title=element_blank(),
legend.text=element_text(size=8),
legend.margin=margin(t=0, r=0, b=0, l=0, unit="pt"),
legend.box.margin=margin(t=0, r=0, b=0, l=0, unit="pt"),
# strip.clip="off",
plot.margin=margin(t=0, r=0, b=0, l=0, unit="pt"),
panel.spacing=unit(0.75, "mm"),
strip.text=element_text(size=8), axis.title=element_text(size=8))
BA_sp %>%
group_by(speaker, model, context, corpus) %>%
summarise(bhatt_aff = mean(bhatt_aff)) %>%
pivot_wider(names_from="context", values_from="bhatt_aff") %>%
ggplot(aes(x=oral, y=nasal)) +
geom_point(size=1, alpha=0.25) +
facet_grid(corpus~model) +
geom_abline(size=0.3, lty=3) +
xlab("preoral Bhattacharyya affinity") +
ylab("prenasal Bhattacharyya affinity") +
xlim(0,1) + ylim(0,1) +
coord_fixed() +
theme_bw(base_size=10) +
theme(axis.text.x=element_text(angle=90, hjust=1, vjust=0.5, size=6),
axis.text.y=element_text(size=6),
# axis.title.x=element_text(margin=margin(t=0, b=0)),
legend.position="top", legend.title=element_blank(),
legend.text=element_text(size=8),
legend.margin=margin(t=0, r=0, b=0, l=0, unit="pt"),
legend.box.margin=margin(t=0, r=0, b=0, l=0, unit="pt"),
# strip.clip="off",
plot.margin=margin(t=0, r=0, b=0, l=0, unit="pt"),
panel.spacing=unit(0.75, "mm"),
strip.text=element_text(size=8), axis.title=element_text(size=8))
ggsave("../plots/BA_Interspeech_triangle_ppt.pdf",
width=110, height=80, units = "mm",
device=cairo_pdf)
