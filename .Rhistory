ylab('normalized formant value')
raleigh_data %>%
# give all speakers equal weight
group_by(speaker, vowel, context) %>%
summarize(F1=mean(F1), F2=mean(F2)) %>%
ungroup() %>%
# now average all speakers together
group_by(vowel, context) %>%
summarize(F1=mean(F1), F2=mean(F2)) %>%
ungroup() %>%
ggplot(aes(x=context, color=vowel, fill=vowel)) +
geom_point(shape=1, aes(y=F1)) +
geom_point(shape=2, aes(y=F2)) +
geom_line(lty=1, aes(y=F1, group=vowel)) +
geom_line(lty=2, aes(y=F2, group=vowel)) +
ylab('normalized formant value')
raleigh_data %>%
# give all speakers equal weight
group_by(speaker, vowel, context) %>%
summarize(F1=mean(F1), F2=mean(F2)) %>%
ungroup() %>%
# now average all speakers together
group_by(vowel, context) %>%
summarize(F1=mean(F1), F2=mean(F2)) %>%
ungroup() %>%
ggplot(aes(x=context, color=vowel, fill=vowel)) +
geom_point(shape=1, aes(y=F1)) +
geom_point(shape=2, aes(y=F2)) +
geom_line(lty=21, aes(y=F1, group=vowel)) +
geom_line(lty=24, aes(y=F2, group=vowel)) +
ylab('normalized formant value')
raleigh_data %>%
# give all speakers equal weight
group_by(speaker, vowel, context) %>%
summarize(F1=mean(F1), F2=mean(F2)) %>%
ungroup() %>%
# now average all speakers together
group_by(vowel, context) %>%
summarize(F1=mean(F1), F2=mean(F2)) %>%
ungroup() %>%
ggplot(aes(x=context, color=vowel, fill=vowel)) +
geom_point(shape=21, aes(y=F1)) +
geom_point(shape=24, aes(y=F2)) +
geom_line(lty=1, aes(y=F1, group=vowel)) +
geom_line(lty=2, aes(y=F2, group=vowel)) +
ylab('normalized formant value')
raleigh_data %>%
# give all speakers equal weight
group_by(speaker, vowel, context) %>%
summarize(F1=mean(F1), F2=mean(F2)) %>%
ungroup() %>%
# now average all speakers together
group_by(vowel, context) %>%
summarize(F1=mean(F1), F2=mean(F2)) %>%
ungroup() %>%
ggplot(aes(x=context, color=vowel, fill=vowel)) +
geom_point(shape=21, aes(y=F1)) +
geom_point(shape=24, aes(y=F2), show.legend=FALSE) +
geom_line(lty=1, aes(y=F1, group=vowel)) +
geom_line(lty=2, aes(y=F2, group=vowel)) +
ylab('normalized formant value')
p_F1_sp_emp <- raleigh_data %>%
group_by(speaker, vowel, context) %>%
summarize(F1=mean(F1)) %>%
ungroup() %>%
ggplot(aes(x=context, y=F1, color=vowel)) +
geom_point(shape=21) +
geom_line(lty=1, aes(group=interaction(vowel, speaker)))
p_F2_sp_emp <- raleigh_data %>%
group_by(speaker, vowel, context) %>%
summarize(F2=mean(F2)) %>%
ungroup() %>%
ggplot(aes(x=context, y=F2, color=vowel, fill=vowel)) +
geom_point(shape=24) +
geom_line(lty=2, aes(group=interaction(vowel, speaker)))
p_F1_sp_emp + p_F2_sp_emp
p_F1_sp_emp <- raleigh_data %>%
group_by(speaker, vowel, context) %>%
summarize(F1=mean(F1)) %>%
ungroup() %>%
ggplot(aes(x=context, y=F1, color=vowel, fill=vowel)) +
geom_point(shape=21) +
geom_line(lty=1, aes(group=interaction(vowel, speaker)))
p_F2_sp_emp <- raleigh_data %>%
group_by(speaker, vowel, context) %>%
summarize(F2=mean(F2)) %>%
ungroup() %>%
ggplot(aes(x=context, y=F2, color=vowel, fill=vowel)) +
geom_point(shape=24) +
geom_line(lty=2, aes(group=interaction(vowel, speaker)))
p_F1_sp_emp + p_F2_sp_emp
model <- brm(F1 + F2 +
# set_rescor(TRUE) means that correlations between F1 & F2
# will be modelled.
set_rescor(TRUE),
# we want to use the smaller dataset so it doesn't take
# forever to fit
data=raleigh_data_50,
# fitting a gaussian model (more details below): this is the
# default, but I'm making it explicit here for pedagogical
# purposes
family=gaussian,
# if this file exists, this call will just read in the file.
# Otherwise, the call will save the model here.
file="tutorial_model",
# Set prior for correlations. All other parameters just use
# default priors.
prior = c(prior(lkj(1.5), class = cor)),
# my computer has 8 cores, so I'm using 4 here, change
# according to your own machine. Ideally, you want to use the
# same number of cores as chains, so that all the chains can
# run in parallel.
chains=4, cores=4,
# If there are warnings, consider increasing the number of
# iterations.
iter = 4000)
p_F2_interaction_modelled <- sp_estimates %>%
ggplot(aes(x=context, y=F2, color=vowel)) +
geom_point(show.legend=FALSE) +
scale_y_reverse() +
labs(title='modelled') +
geom_line(aes(group=interaction(vowel, speaker)), show.legend=FALSE) +
# ylim(0.2, -1.2) +
theme_minimal()
p_F2_interaction_empirical <- raleigh_data %>%
group_by(speaker, vowel, context) %>%
summarize(F2=mean(F2)) %>%
ungroup() %>%
ggplot(aes(x=context, y=F2, color=vowel)) +
geom_point() +
scale_y_reverse() +
labs(title='empirical') +
geom_line(aes(group=interaction(vowel, speaker))) +
# ylim(0.2, -1.2) +
theme_minimal() +
theme(axis.title.y=element_blank())
(p_F1_interaction_modelled + p_F1_interaction_empirical) /
(p_F2_interaction_modelled + p_F2_interaction_empirical)
p_F2_interaction_modelled <- sp_estimates %>%
ggplot(aes(x=context, y=F2, color=vowel, fill=vowel)) +
geom_point(shape=24, show.legend=FALSE) +
scale_y_reverse() +
labs(title='modelled') +
geom_line(lty=2, aes(group=interaction(vowel, speaker)),
show.legend=FALSE) +
# ylim(0.2, -1.2) +
theme_minimal()
p_F2_interaction_empirical <- raleigh_data %>%
group_by(speaker, vowel, context) %>%
summarize(F2=mean(F2)) %>%
ungroup() %>%
ggplot(aes(x=context, y=F2, color=vowel, fill=vowel)) +
geom_point(shape=24) +
scale_y_reverse() +
labs(title='empirical') +
geom_line(lty=2, aes(group=interaction(vowel, speaker))) +
# ylim(0.2, -1.2) +
theme_minimal() +
theme(axis.title.y=element_blank())
(p_F1_interaction_modelled + p_F1_interaction_empirical) /
(p_F2_interaction_modelled + p_F2_interaction_empirical)
(p_F2_interaction_modelled + p_F2_interaction_empirical)
p_F2_interaction_modelled <- sp_estimates %>%
ggplot(aes(x=context, y=F2, color=vowel, fill=vowel)) +
geom_point(shape=24, show.legend=FALSE) +
scale_y_reverse() +
labs(title='modelled') +
geom_line(lty=2, aes(group=interaction(vowel, speaker)),
show.legend=FALSE) +
ylim(1.5, 0.3) +
theme_minimal()
p_F2_interaction_empirical <- raleigh_data %>%
group_by(speaker, vowel, context) %>%
summarize(F2=mean(F2)) %>%
ungroup() %>%
ggplot(aes(x=context, y=F2, color=vowel, fill=vowel)) +
geom_point(shape=24) +
scale_y_reverse() +
labs(title='empirical') +
geom_line(lty=2, aes(group=interaction(vowel, speaker))) +
ylim(1.5, -0.3) +
theme_minimal() +
theme(axis.title.y=element_blank())
(p_F2_interaction_modelled + p_F2_interaction_empirical)
p_F2_interaction_empirical <- raleigh_data %>%
group_by(speaker, vowel, context) %>%
summarize(F2=mean(F2)) %>%
ungroup() %>%
ggplot(aes(x=context, y=F2, color=vowel, fill=vowel)) +
geom_point(shape=24) +
scale_y_reverse() +
labs(title='empirical') +
geom_line(lty=2, aes(group=interaction(vowel, speaker))) +
ylim(1.5, 0.3) +
theme_minimal() +
theme(axis.title.y=element_blank())
(p_F2_interaction_modelled + p_F2_interaction_empirical)
(p_F2_interaction_modelled + p_F2_interaction_empirical) /
(p_F1_interaction_modelled + p_F1_interaction_empirical)
raleigh_data %>%
group_by(speaker, vowel, context) %>%
summarize(across(c(F1, F2), mean)) %>%
ungroup() %>%
ggplot(aes(x=F2, y=F1, color=context, shape=vowel)) +
stat_ellipse(data=raleigh_data, level=0.66, aes(lty=vowel)) +
geom_point() +
geom_line(aes(group=interaction(context, speaker))) +
scale_x_reverse() + scale_y_reverse() +
facet_wrap(~speaker)
raleigh_data %>%
# give all speakers equal weight
group_by(speaker, vowel, context) %>%
summarize(F1=mean(F1), F2=mean(F2)) %>%
ungroup() %>%
# now average all speakers together
group_by(vowel, context) %>%
summarize(F1=mean(F1), F2=mean(F2)) %>%
ungroup() %>%
ggplot(aes(x=vowel, color=context, fill=context)) +
geom_point(shape=21, aes(y=F1)) +
geom_point(shape=24, aes(y=F2), show.legend=FALSE) +
geom_line(lty=1, aes(y=F1, group=context)) +
geom_line(lty=2, aes(y=F2, group=context)) +
ylab('normalized formant value')
p_F1_sp_emp <- raleigh_data %>%
group_by(speaker, vowel, context) %>%
summarize(F1=mean(F1)) %>%
ungroup() %>%
ggplot(aes(x=vowel, y=F1, color=context, fill=context)) +
geom_point(shape=21) +
geom_line(lty=1, aes(group=interaction(context, speaker)))
p_F2_sp_emp <- raleigh_data %>%
group_by(speaker, vowel, context) %>%
summarize(F2=mean(F2)) %>%
ungroup() %>%
ggplot(aes(x=vowel, y=F2, color=context, fill=context)) +
geom_point(shape=24) +
geom_line(lty=2, aes(group=interaction(context, speaker)))
p_F1_sp_emp + p_F2_sp_emp
p_F1_sp_emp <- raleigh_data %>%
group_by(speaker, vowel, context) %>%
summarize(F1=mean(F1)) %>%
ungroup() %>%
ggplot(aes(x=vowel, y=F1, color=context, fill=context)) +
geom_point(shape=21) +
geom_line(lty=1, aes(group=interaction(context, speaker))) +
scale_y_reverse()
p_F2_sp_emp <- raleigh_data %>%
group_by(speaker, vowel, context) %>%
summarize(F2=mean(F2)) %>%
ungroup() %>%
ggplot(aes(x=vowel, y=F2, color=context, fill=context)) +
geom_point(shape=24) +
geom_line(lty=2, aes(group=interaction(context, speaker))) +
scale_y_reverse()
p_F1_sp_emp + p_F2_sp_emp
p_F1_interaction_modelled <- sp_estimates %>%
ggplot(aes(x=vowel, y=F1, color=context)) +
geom_point(show.legend=FALSE) +
scale_y_reverse() +
labs(title='modelled') +
geom_line(aes(group=interaction(context, speaker)), show.legend=FALSE) +
ylim(0.2, -1.2) +
theme_minimal()
p_F1_interaction_empirical <- raleigh_data %>%
group_by(speaker, vowel, context) %>%
summarize(F1=mean(F1)) %>%
ungroup() %>%
ggplot(aes(x=vowel, y=F1, color=context)) +
geom_point() +
scale_y_reverse() +
labs(title='empirical') +
geom_line(aes(group=interaction(context, speaker))) +
ylim(0.2, -1.2) +
theme_minimal() +
theme(axis.title.y=element_blank())
(p_F2_interaction_modelled + p_F2_interaction_empirical) /
(p_F1_interaction_modelled + p_F1_interaction_empirical)
p_F1_interaction_modelled <- sp_estimates %>%
ggplot(aes(x=vowel, y=F1, color=context)) +
geom_point(show.legend=FALSE) +
scale_y_reverse() +
labs(title='modelled') +
geom_line(aes(group=interaction(context, speaker)), show.legend=FALSE) +
ylim(0.2, -1.2) +
theme_minimal()
p_F1_interaction_empirical <- raleigh_data %>%
group_by(speaker, vowel, context) %>%
summarize(F1=mean(F1)) %>%
ungroup() %>%
ggplot(aes(x=vowel, y=F1, color=context)) +
geom_point() +
scale_y_reverse() +
labs(title='empirical') +
geom_line(aes(group=interaction(context, speaker))) +
ylim(0.2, -1.2) +
theme_minimal() +
theme(axis.title.y=element_blank())
p_F2_interaction_modelled <- sp_estimates %>%
ggplot(aes(x=vowel, y=F2, color=context, fill=context)) +
geom_point(shape=24, show.legend=FALSE) +
scale_y_reverse() +
labs(title='modelled') +
geom_line(lty=2, aes(group=interaction(context, speaker)),
show.legend=FALSE) +
ylim(1.5, 0.3) +
theme_minimal()
p_F2_interaction_empirical <- raleigh_data %>%
group_by(speaker, vowel, context) %>%
summarize(F2=mean(F2)) %>%
ungroup() %>%
ggplot(aes(x=vowel, y=F2, color=context, fill=context)) +
geom_point(shape=24) +
scale_y_reverse() +
labs(title='empirical') +
geom_line(lty=2, aes(group=interaction(context, speaker))) +
ylim(1.5, 0.3) +
theme_minimal() +
theme(axis.title.y=element_blank())
(p_F2_interaction_modelled + p_F2_interaction_empirical) /
(p_F1_interaction_modelled + p_F1_interaction_empirical)
p_F1_interaction_modelled <- sp_estimates %>%
ggplot(aes(x=vowel, y=F1, color=context)) +
geom_point(show.legend=FALSE) +
scale_y_reverse() +
# labs(title='modelled') +
geom_line(aes(group=interaction(context, speaker)), show.legend=FALSE) +
ylim(0.2, -1.2) +
theme_minimal()
p_F1_interaction_empirical <- raleigh_data %>%
group_by(speaker, vowel, context) %>%
summarize(F1=mean(F1)) %>%
ungroup() %>%
ggplot(aes(x=vowel, y=F1, color=context)) +
geom_point() +
scale_y_reverse() +
# labs(title='empirical') +
geom_line(aes(group=interaction(context, speaker))) +
ylim(0.2, -1.2) +
theme_minimal() +
theme(axis.title.y=element_blank())
p_F2_interaction_modelled <- sp_estimates %>%
ggplot(aes(x=vowel, y=F2, color=context, fill=context)) +
geom_point(shape=24, show.legend=FALSE) +
scale_y_reverse() +
labs(title='modelled') +
geom_line(lty=2, aes(group=interaction(context, speaker)),
show.legend=FALSE) +
ylim(1.5, 0.3) +
theme_minimal()
p_F2_interaction_empirical <- raleigh_data %>%
group_by(speaker, vowel, context) %>%
summarize(F2=mean(F2)) %>%
ungroup() %>%
ggplot(aes(x=vowel, y=F2, color=context, fill=context)) +
geom_point(shape=24) +
scale_y_reverse() +
labs(title='empirical') +
geom_line(lty=2, aes(group=interaction(context, speaker))) +
ylim(1.5, 0.3) +
theme_minimal() +
theme(axis.title.y=element_blank())
(p_F2_interaction_modelled + p_F2_interaction_empirical) /
(p_F1_interaction_modelled + p_F1_interaction_empirical)
raleigh_data %>%
# give all speakers equal weight
group_by(speaker, vowel, context) %>%
summarize(F1=mean(F1), F2=mean(F2)) %>%
ungroup() %>%
# now average all speakers together
group_by(vowel, context) %>%
summarize(F1=mean(F1), F2=mean(F2)) %>%
ungroup() %>%
ggplot(aes(x=vowel, color=context, fill=context)) +
geom_point(shape=21, aes(y=F1)) +
geom_point(shape=24, aes(y=F2), show.legend=FALSE) +
geom_line(lty=1, aes(y=F1, group=context)) +
geom_line(lty=2, aes(y=F2, group=context)) +
scale_y_reverse() +
ylab('normalized formant value')
p_F1_interaction_modelled <- sp_estimates %>%
ggplot(aes(x=vowel, y=F1, color=context)) +
geom_point(show.legend=FALSE) +
scale_y_reverse() +
# labs(title='modelled') +
geom_line(aes(group=interaction(context, speaker)), show.legend=FALSE) +
ylim(0.2, -1.2) +
theme_minimal()
p_F1_interaction_empirical <- raleigh_data %>%
group_by(speaker, vowel, context) %>%
summarize(F1=mean(F1)) %>%
ungroup() %>%
ggplot(aes(x=vowel, y=F1, color=context)) +
geom_point() +
scale_y_reverse() +
# labs(title='empirical') +
geom_line(aes(group=interaction(context, speaker))) +
ylim(0.2, -1.2) +
theme_minimal() +
theme(axis.title.y=element_blank())
p_F2_interaction_modelled <- sp_estimates %>%
ggplot(aes(x=vowel, y=F2, color=context, fill=context)) +
geom_point(shape=24, show.legend=FALSE) +
scale_y_reverse() +
labs(title='modelled') +
geom_line(lty=2, aes(group=interaction(context, speaker)),
show.legend=FALSE) +
ylim(1.5, 0.3) +
theme_minimal()
p_F2_interaction_empirical <- raleigh_data %>%
group_by(speaker, vowel, context) %>%
summarize(F2=mean(F2)) %>%
ungroup() %>%
ggplot(aes(x=vowel, y=F2, color=context, fill=context)) +
geom_point(shape=24) +
scale_y_reverse() +
labs(title='empirical') +
geom_line(lty=2, aes(group=interaction(context, speaker))) +
ylim(1.5, 0.3) +
theme_minimal() +
theme(axis.title.y=element_blank())
(p_F1_interaction_modelled + p_F1_interaction_empirical) /
(p_F2_interaction_modelled + p_F2_interaction_empirical)
p_F1_interaction_modelled <- sp_estimates %>%
ggplot(aes(x=vowel, y=F1, color=context)) +
geom_point(show.legend=FALSE) +
scale_y_reverse() +
labs(title='modelled') +
geom_line(aes(group=interaction(context, speaker)), show.legend=FALSE) +
ylim(0.2, -1.2) +
theme_minimal()
p_F1_interaction_empirical <- raleigh_data %>%
group_by(speaker, vowel, context) %>%
summarize(F1=mean(F1)) %>%
ungroup() %>%
ggplot(aes(x=vowel, y=F1, color=context)) +
geom_point() +
scale_y_reverse() +
labs(title='empirical') +
geom_line(aes(group=interaction(context, speaker))) +
ylim(0.2, -1.2) +
theme_minimal() +
theme(axis.title.y=element_blank())
p_F2_interaction_modelled <- sp_estimates %>%
ggplot(aes(x=vowel, y=F2, color=context, fill=context)) +
geom_point(shape=24, show.legend=FALSE) +
scale_y_reverse() +
# labs(title='modelled') +
geom_line(lty=2, aes(group=interaction(context, speaker)),
show.legend=FALSE) +
ylim(1.5, 0.3) +
theme_minimal()
p_F2_interaction_empirical <- raleigh_data %>%
group_by(speaker, vowel, context) %>%
summarize(F2=mean(F2)) %>%
ungroup() %>%
ggplot(aes(x=vowel, y=F2, color=context, fill=context)) +
geom_point(shape=24) +
scale_y_reverse() +
# labs(title='empirical') +
geom_line(lty=2, aes(group=interaction(context, speaker))) +
ylim(1.5, 0.3) +
theme_minimal() +
theme(axis.title.y=element_blank())
(p_F1_interaction_modelled + p_F1_interaction_empirical) /
(p_F2_interaction_modelled + p_F2_interaction_empirical)
sp_estimates <- fitted_sp %>%
group_by(speaker, vowel, context) %>%
mean_qi() %>%
ungroup()
av_preds <- expand_grid(context = factor(levels(model$data$context),
levels=levels(model$data$context)),
vowel = factor(levels(model$data$vowel),
levels=levels(model$data$vowel)))
sp_preds <- expand_grid(context = factor(levels(model$data$context),
levels=levels(model$data$context)),
vowel = factor(levels(model$data$vowel),
levels=levels(model$data$vowel)),
speaker = unique(model$data$speaker))
num_draws=100
num_points=25
fitted_sp <- sp_preds %>%
add_epred_draws(model,
re_formula = ~(1+context*vowel|
q|speaker),
ndraws=num_draws) %>%
ungroup() %>%
pivot_wider(names_from=".category", values_from=".epred")
fitted_av <- av_preds %>%
add_epred_draws(model,
re_formula=NA, # needs to be NA (which keeps it empty), rather than NULL, which is the "default," i.e., complete random effects structure
ndraws=num_draws) %>%
ungroup() %>%
pivot_wider(names_from=".category", values_from=".epred")
predicted_sp <- sp_preds %>%
add_predicted_draws(model,
re_formula = ~(1+context*vowel|
q|speaker),
ndraws=num_draws) %>%
ungroup() %>%
pivot_wider(names_from=".category", values_from=".prediction")
predicted_av <- av_preds %>%
add_predicted_draws(model,
re_formula=NA,
ndraws=num_draws) %>%
ungroup() %>%
pivot_wider(names_from=".category", values_from=".prediction")
sp_estimates <- fitted_sp %>%
group_by(speaker, vowel, context) %>%
mean_qi() %>%
ungroup()
? mean_qi
