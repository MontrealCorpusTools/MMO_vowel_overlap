---
title: "Subdivide corpora"
author: "Irene Smith"
date: "`r Sys.Date()`"
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
setwd("~/GitHub/PIN-PEN-merger/scripts")
library(tidyverse)
library(adehabitatHR)
library(arm)
library(tidybayes)
library(patchwork)
library(ggrepel)
```

```{r}
corpus_names <- c("Raleigh", "WestVirginia", "Kansas", "Sunset", "Canadian-Prairies",
                  "UBC", "Devon", "Hastings", "ModernRP", "OLIVE", "SOTC",
                  "SLAAP-NC-AA", "SLAAP-NC-misc", "SLAAP-NorthTown-Anglo",
                  "SLAAP-NorthTown-Latinx", "SLAAP-Ohio", "Buckeye", "SCOTS")
metadata_filename <- "spade_dialects_2023_06_14.csv"

speaker_metadata_full <- read.csv(paste("../data/", metadata_filename, sep = ""))
speaker_metadata <- speaker_metadata_full %>%
  filter(corpus %in% corpus_names)

subcorpora_counts <- speaker_metadata %>%
  group_by(corpus) %>%
  count(dialect)
```

```{r}
speaker_metadata %>%
  ggplot(aes(x=longitude, y=latitude)) +
  geom_point(aes(color=dialect)) +
  facet_wrap(~corpus, scales = "free")
```

```{r}
speaker_metadata %>%
  filter(corpus=="SCOTS") %>%
  ggplot(aes(x=longitude, y=latitude)) +
  geom_point(aes(color=dialect))
```

```{r}
speakers_to_keep <- speaker_metadata %>%
  filter(!(corpus=="SCOTS" & (dialect %in% c("England_Lower_North", 
                                             "Scotland_Highlands", 
                                             "Scotland_Insular", 
                                             "Scotland_West",
                                             "unknown")))) %>% # removing everything from SCOTS but East, Central, and North
  filter(!(corpus=="SLAAP-NC-misc" & dialect=="Latino_American")) %>%
  filter(!(corpus=="SLAAP-Ohio" & dialect=="African_American")) %>%
  mutate(speaker = str_replace(speaker, paste(corpus, "_", sep=""), ""))

```


Unisyn dictionaries
```{r}
unisyn_aae <- read.csv("../data/aae_keysymbols.csv")
unisyn_can <- read.csv("../data/can_keysymbols.csv")
unisyn_edi <- read.csv("../data/edi_keysymbols.csv")
unisyn_gam <- read.csv("../data/gam_keysymbols.csv")
unisyn_lds <- read.csv("../data/lds_keysymbols.csv")
unisyn_rpx <- read.csv("../data/rpx_keysymbols.csv")
unisyn_sca <- read.csv("../data/sca_keysymbols.csv")
unisyn_xxx <- read_lines("../data/unilex")

unisyn_cmb <- bind_rows(`aae` = unisyn_aae,
                        `can` = unisyn_can,
                        `edi` = unisyn_edi,
                        `gam` = unisyn_gam,
                        `lds` = unisyn_lds,
                        `rpx` = unisyn_rpx,
                        `sca` = unisyn_sca,
                        .id = "dialect_group")

unisyn2 <- unisyn_xxx %>%
  str_extract('(.+?):[^\\s].+:\\s(.+)\\s:', group = c(1, 2)) %>% 
  as.data.frame()

colnames(unisyn2) <- c('Word', 'Transcription')

unisyn3 <- unisyn2$Transcription %>%
  str_extract('\\*\\s([^\\s]+)\\s(=?\\.?=?)\\s?([^\\s]+)', group = c(1, 2, 3)) %>%
  as.data.frame

colnames(unisyn3) <- c("stressed_syll", "syll_boundary", "following_cons")

unisyn_dict <- unisyn2 %>%
  bind_cols(unisyn3) %>%
  group_by(Word, stressed_syll) %>%
  summarise(Word = first(Word),
            Transcription = first(Transcription),
            stressed_syll = first(stressed_syll), 
            syll_boundary = first(syll_boundary),
            following_cons = first(following_cons)) %>%
  ungroup()
```

```{r}

words_test <- unisyn_cmb %>%
  filter(UnisynPrimStressedVowel1=="i" | 
           UnisynPrimStressedVowel1=="e" |
           UnisynPrimStressedVowel1=="a" |
           UnisynPrimStressedVowel1=="aa" |
           UnisynPrimStressedVowel1=="u") %>% 
  filter(UnisynPrimStressedVowel1 == UnisynPrimStressedVowel2) %>% 
  mutate(word_pron = paste(Word, WordId))

words_I_E_pre <- unisyn_cmb %>%
  filter(UnisynPrimStressedVowel1=="i" | 
           UnisynPrimStressedVowel1=="e") %>% 
  filter(UnisynPrimStressedVowel1 == UnisynPrimStressedVowel2) %>% 
  mutate(word_pron = paste(Word, WordId))

words_to_elim <- words_I_E_pre %>%
  group_by(word_pron) %>%
  count() %>%
  filter(n != 7) %>%
  ungroup()

words_I_E <- words_I_E_pre %>%
  filter(!(word_pron %in% words_to_elim$word_pron)) %>%
  dplyr::select(Word, WordId, UnisynPrimStressedVowel1, UnisynPrimStressedVowel2) %>%
  unique()

aae_I_E <- words_I_E_pre %>% # take any example dialect in order to do a setdiff
  filter(!(word_pron %in% words_to_elim$word_pron)) %>%
  filter(dialect_group == "aae") %>%
  dplyr::select(Word, WordId, UnisynPrimStressedVowel1, UnisynPrimStressedVowel2)

duplicated_words <- words_I_E %>%
  setdiff(aae_I_E)

words_to_inspect <- words_I_E_pre %>% 
  filter(Word %in% duplicated_words$Word)
# this turns out to be a list of words where there are two possible stress 
# patterns, and some dialects have one stress pattern, and other dialects have 
# the other. The exception is cigarette and cigarettes, where all dialects have 
# both stress patterns, but they're ordered differently. I'm just getting rid of 
# all of these words.

final_word_list <- words_I_E %>%
  filter(!(Word %in% duplicated_words$Word)) %>%
  group_by(Word) %>%
  summarise(Word = first(Word), stressed_syll = first(UnisynPrimStressedVowel1)) %>%
  left_join(unisyn_dict, by=c("Word", "stressed_syll")) %>%
  filter(!(following_cons %in% c("@", "[.", "[p1]", "r", NA)))

# final_word_counts <- final_word_list %>%
#   group_by(Word) %>%
#   count() %>%
#   filter(n > 1)
# # this returns an empty dataframe, which is exactly what I want!

cons_counts <- final_word_list %>%
  group_by(following_cons) %>%
  count()

weird_cons <- cons_counts %>%
  filter(n <= 5)

cons_insp <- final_word_list %>%
  filter(following_cons %in% weird_cons$following_cons)

final_word_list_mod <- final_word_list %>%
  mutate(following_phone = case_when(
    following_cons == "k/g" ~ "k", # derivations of "exit"
    following_cons == "dh/th" ~ "th", # derivations of "with", as well as "scythia" 
    following_cons == "(z" ~ "z", # jesuit(s)
    following_cons == "ll" ~ "l", # llanelli
    Word %in% c("said", "unsaid", "gainsaid") ~ "d",
    Word == "says" ~ "z",
    TRUE ~ following_cons)) %>%
  mutate(context = case_when(
    following_phone %in% c("m", "n", "ng") ~ "nasal",
    TRUE ~ "oral")) %>%
  mutate(syllable_type = case_when(
    syll_boundary %in% c(".", "=.=") ~ "open",
    TRUE ~ "closed")) %>%
  dplyr::select(Word, stressed_syll, following_phone, context, syllable_type) %>%
  rename(word="Word", stressed_vowel="stressed_syll", following_cons="following_phone")
```

Read in corpora
```{r}

filter_data <- function(corpus_name, unisyn_group){
  data <- read.csv(paste("../data/spade-", corpus_name, "_formants.csv", 
                         sep = "")) %>%
    group_by(speaker) %>%
    mutate(zF1 = as.numeric(scale(F1)),
           zF2 = as.numeric(scale(F2))) %>%
    ungroup() %>%
    mutate(word = tolower(word)) %>%
    rename(stressed_vowel=paste("unisynPrimStressedVowel2", unisyn_group, 
                                sep="_")) %>%
    inner_join(final_word_list_mod, by=c("word", "stressed_vowel")) %>%
    filter(UnisynPrimStressedVowel1==stressed_vowel) %>%
    dplyr::select(speaker, duration, word, stressed_vowel, 
                  following_cons, context, syllable_type, F1, F2, zF1, zF2) %>%
    inner_join(speakers_to_keep %>% filter(corpus==corpus_name), by="speaker")}

CanPrairies_info <- read.csv("../data/speaker_info_Canadian-Prairies.csv") %>%
  dplyr::select(speaker_id, rurality) %>%
  mutate(rurality = case_when(
    rurality %in% c("urban", "semi-urban") ~ "urban",
    rurality == "rural" ~ "rural")) %>%
  rename(speaker="speaker_id")

Raleigh_data <- filter_data("Raleigh", "sca")
WestVirginia_data <- filter_data("WestVirginia", "sca")
Kansas_data <- filter_data("Kansas", "gam")
Sunset_data <- filter_data("Sunset", "gam")
Canadian_Prairies_data <- filter_data("Canadian-Prairies", "can") %>%
  inner_join(CanPrairies_info, by="speaker") %>%
  mutate(rurality = case_when(
    rurality %in% c("urban", "semi-urban") ~ "urban",
    rurality == "rural" ~ "rural")) %>%
  mutate(dialect = paste(rurality, dialect, sep = "_")) %>%
  dplyr::select(-rurality)
UBC_data <- filter_data("UBC", "can")
Devon_data <- filter_data("Devon", "rpx")
Hastings_data <- filter_data("Hastings", "rpx")
ModernRP_data <- filter_data("ModernRP", "rpx")
OLIVE_data <- filter_data("OLIVE", "lds")
SOTC_data <- filter_data("SOTC", "edi")
SLAAP_NC_AA_data <- filter_data("SLAAP-NC-AA", "aae")
SLAAP_NC_misc_data <- filter_data("SLAAP-NC-misc", "sca")
SLAAP_NorthTown_Anglo_data <- filter_data("SLAAP-NorthTown-Anglo", "sca")
SLAAP_NorthTown_Latinx_data <- filter_data("SLAAP-NorthTown-Latinx", "gam")
SLAAP_Ohio_data <- filter_data("SLAAP-Ohio", "gam")
Buckeye_data <- filter_data("Buckeye", "gam")
SCOTS_data <- filter_data("SCOTS", "edi")

data_all <- bind_rows(Raleigh_data,
                      WestVirginia_data, 
                      Kansas_data,
                      Sunset_data,
                      Canadian_Prairies_data,
                      UBC_data,
                      Devon_data,
                      Hastings_data,
                      ModernRP_data,
                      OLIVE_data,
                      SOTC_data,
                      SLAAP_NC_AA_data,
                      SLAAP_NC_misc_data,
                      SLAAP_NorthTown_Anglo_data,
                      SLAAP_NorthTown_Latinx_data,
                      SLAAP_Ohio_data,
                      Buckeye_data,
                      SCOTS_data) %>%
  mutate(corpus_dialect = paste(corpus, dialect, sep = "_")) %>%
  group_by(corpus_dialect) %>%
  mutate(log_duration = arm::rescale(log(duration)),
         context = factor(context),
         gender = factor(gender),
         syllable_type = factor(syllable_type),
         stressed_vowel = factor(stressed_vowel)) %>%
  ungroup()

# helmert code factors
contrasts(data_all$context) <- contr.helmert(2)
contrasts(data_all$syllable_type) <- contr.helmert(2)
contrasts(data_all$stressed_vowel) <- contr.helmert(2)
# excluding gender for now because I don't know what to do about "not recorded";
# gender isn't included in model 2, but might need to address this if I fit 
# models with gender included as a predictor

# save them all together
data_all %>% saveRDS(file="../data/all_corpora_eval2_revisions.rds")

# save each corpus individually
data_all %>%
  group_by(corpus_dialect) %>%
  group_walk(~ saveRDS(.x, file=paste("../data/eval_2_revisions/",
                                      .y$corpus_dialect, 
                                      "_data.rds", sep="")))
```

```{r, fig.height=15}
data_all %>%
  ggplot(aes(x=zF2, y=zF1)) +
  geom_point(alpha=0.25, aes(color=stressed_vowel)) +
  facet_wrap(~corpus_dialect + context) +
  scale_x_reverse() + scale_y_reverse() + coord_fixed() +
  xlim(-2.5, 2.5) + ylim(-2.5, 2.5)
```
```{r, fig.height=15, fig.width = 15}
data_all %>%
  ggplot(aes(x=zF2, y=zF1)) +
  stat_ellipse(level=0.66, aes(color=stressed_vowel)) +
  facet_wrap(~corpus_dialect + context, ncol = 6) +
  scale_x_reverse() + scale_y_reverse() + coord_fixed() +
  xlim(2.5, -2.5) + ylim(2.5, -2.5)
```

```{r, fig.height=15, fig.width = 15}
data_all %>%
  ggplot(aes(x=zF2, y=zF1)) +
  stat_ellipse(level=0.1, aes(color=corpus_dialect)) +
  facet_wrap(~stressed_vowel+context) +
  scale_x_reverse() + scale_y_reverse() + coord_fixed() # +
  # xlim(2.5, -2.5) + ylim(2.5, -2.5)
```
```{r}
merge_order_names <- c("South Texas\n US South", "West Virginia\n US South", "Ohio\n US Midland", "Columbus, OH\n US Midland", "England \n Southwest",
                      "South Texas\n Latino American", "West Virginia\n US Midland", "Ohio\n US Inland North", "Scotland \n West", "England \n East",
                      "North Carolina\n US South", "Kansas\n US Midland", "Canada Prairies\n Rural", "Scotland \n Central", "England \n London",
                      "North Carolina\n African American", "Kansas\n Latino American", "Canada Prairies\n Urban", "Scotland \n East", "England \n Merseyside",
                      "Raleigh, NC\n US South", "California\n US West", "British Columbia", "Scotland \n Northern", "England \n West Central") # %>%
  # matrix(5, 5) %>% # convert to a 5x5 matrix
  # t() %>% # take the transverse
  # as.vector() # %>% 
  # # c(NA, NA) %>%
  # # matrix(nrow=3) %>%
  # # t() %>%
  # # as.vector

merge_order_cols <- c("SLAAP-NorthTown-Anglo_US_South",          "WestVirginia_US_South",    "SLAAP-Ohio_US_Midland",                    "Buckeye_US_Midland",      "Devon_NA",
                      "SLAAP-NorthTown-Latinx_Latino_American",  "WestVirginia_US_Midland",  "SLAAP-Ohio_US_Inland_North",               "SOTC_Scotland_West",      "Hastings_England_East", 
                      "SLAAP-NC-misc_US_South",                  "Kansas_US_Midland",        "Canadian-Prairies_rural_Canada_Prairies",  "SCOTS_Scotland_Central",  "ModernRP_Standard_Southern_British_English",
                      "SLAAP-NC-AA_African_American",            "Kansas_Latino_American",   "Canadian-Prairies_urban_Canada_Prairies",  "SCOTS_Scotland_East",     "OLIVE_England_Merseyside",
                    "Raleigh_US_South",                        "Sunset_US_West",           "UBC_Canada_British_Columbia",              "SCOTS_Scotland_Northern", "OLIVE_England_West_Central") # %>%
  # matrix(5, 5) %>%
  # t() %>%
  # as.vector() # %>% 
  # # matrix(nrow=3) %>%
  # # t() %>%
  # # as.vector
```

```{r, fig.height=10, fig.width = 15}
data_all %>%
  mutate(corpus_dialect=factor(corpus_dialect, levels=merge_order_cols), 
         stressed_vowel=factor(stressed_vowel, levels=c("i", "e"), labels=c("/ɪ/", "/ɛ/"))) %>%
  ggplot(aes(x=zF2, y=zF1)) +
  stat_ellipse(level=0.66, aes(color=context)) +
  facet_wrap(~corpus_dialect + stressed_vowel, ncol = 10) +
  scale_x_reverse() + scale_y_reverse() + coord_fixed() +
  xlim(2.5, -2.5) + ylim(2.5, -2.5)
```

```{r fig.height=15, fig.width = 15}
data_all %>%
  filter(corpus=="SLAAP-NorthTown-Anglo") %>%
  ggplot(aes(x=zF2, y=zF1)) +
  stat_ellipse(level=0.66, aes(color=stressed_vowel)) +
  facet_wrap(~speaker + context, ncol = 6) +
  scale_x_reverse() + scale_y_reverse() + coord_fixed() +
  xlim(2.5, -2.5) + ylim(2.5, -2.5)
```
```{r fig.height=15, fig.width = 15}
data_all %>%
  filter(corpus=="SLAAP-NC-AA") %>%
  ggplot(aes(x=zF2, y=zF1)) +
  stat_ellipse(level=0.66, aes(color=context, lty=stressed_vowel)) +
  facet_wrap(~speaker) +
  scale_x_reverse() + scale_y_reverse() + coord_fixed() +
  xlim(2.5, -2.5) + ylim(2.5, -2.5)
```

```{r}
data_all %>%
  filter(corpus=="SLAAP-NC-AA") %>%
  filter(speaker=="tex001") %>%
  # filter(speaker %in% c("tex001", "prv020", "prv016", "prv006", "prv001")) %>%
  ggplot(aes(x=zF2, y=zF1, color=stressed_vowel)) +
  geom_point(alpha=0.5, show.legend=FALSE) +
  stat_ellipse(level=0.95, show.legend=FALSE) +
  # facet_wrap(~speaker + context) +
  facet_wrap(~context, ncol=1) +
  scale_x_reverse() + scale_y_reverse() + coord_fixed() +
  # xlim(2.5, -2.5) + ylim(2.5, -2.5) +
  theme_bw()
ggsave("../plots/bhatt_aff_ex.png", width=8, height=16, units='cm')
```


```{r fig.height=15, fig.width = 15}
data_all %>%
  filter(corpus=="SLAAP-NC-AA") %>%
  ggplot(aes(x=zF2, y=zF1)) +
  stat_ellipse(level=0.66, aes(color=stressed_vowel)) +
  facet_wrap(~speaker + context, ncol = 10) +
  scale_x_reverse() + scale_y_reverse() + coord_fixed() +
  xlim(2.5, -2.5) + ylim(2.5, -2.5)
```

```{r fig.height=15, fig.width = 15}
data_all %>%
  filter(corpus=="Devon") %>%
  group_by(speaker, word) %>%
  summarize(zF1 = mean(zF1), zF2 = mean(zF2),
            context=first(context), stressed_vowel=first(stressed_vowel)) %>%
  ungroup() %>%
  ggplot(aes(x=zF2, y=zF1)) +
  stat_ellipse(level=0.66, aes(color=stressed_vowel)) +
  facet_wrap(~speaker + context, ncol = 6) +
  scale_x_reverse() + scale_y_reverse() + coord_fixed() +
  xlim(2.5, -2.5) + ylim(2.5, -2.5)
```

```{r}
bhatt <- function (F1, F2, vowel) 
{
  vowel_data <- droplevels(data.frame(vowel))
  
  sp_df <- SpatialPointsDataFrame(cbind(F1, F2), vowel_data)
  tryCatch(
    expr = {kerneloverlap(sp_df, method='BA')[1,2]}, 
    error = function(e){NA})
}


bhatt_affinity <- data_all %>%
  filter(!(is.na(zF1) | is.na(zF2))) %>%
  group_by(speaker, word) %>%
  summarize(zF1 = mean(zF1), zF2 = mean(zF2),
            context=first(context), stressed_vowel=first(stressed_vowel),
            gender=first(gender), birthyear=first(birthyear),
            corpus_dialect = first(corpus_dialect)) %>%
  ungroup() %>%
  group_by(speaker, context) %>%
  summarise(bhatt_aff = bhatt(zF1, zF2, stressed_vowel),
            gender=first(gender), birthyear=first(birthyear),
            corpus_dialect = first(corpus_dialect)) %>%
  ungroup()
```

```{r}
bhatt_affinity %>%
  ggplot(aes(x=bhatt_aff)) +
  geom_density(alpha=0.5, aes(fill=context)) +
  facet_wrap(~corpus_dialect, scales = "free_y") +
  theme(axis.ticks.y = element_blank(),
        axis.text.y = element_blank())
```

```{r}
bhatt_affinity %>%
  filter(corpus_dialect=="SLAAP-NC-AA_African_American") %>%
  filter(speaker %in% c("tex001", "prv020", "prv016", "prv006", "prv001"))
```

```{r}
labs <- bhatt_affinity %>%
  filter(corpus_dialect=="SLAAP-NC-AA_African_American") %>%
  filter(speaker=="tex001") %>%
  dplyr::select(context, bhatt_aff)

data_all %>%
  filter(corpus=="SLAAP-NC-AA") %>%
  filter(speaker=="tex001") %>%
  ggplot(aes(x=zF2, y=zF1, color=stressed_vowel)) +
  geom_point(alpha=0.5) +
  stat_ellipse(level=0.95) +
  scale_color_manual(name="vowel", values=c("violetred4", "chocolate"), labels=c("/ɛ/", "/ɪ/")) +
  facet_wrap(~context) +
  scale_x_reverse() + scale_y_reverse() + coord_fixed() +
  # xlim(2.5, -2.5) + ylim(2.5, -2.5) +
  theme_bw()

ggsave("../plots/BA_demo.png", width=8.5, height=5)

```


Triangle plots!
```{r fig.height=15, fig.width = 15}
bhatt_affinity %>%
  pivot_wider(names_from = 'context', values_from = 'bhatt_aff') %>%
  ggplot(aes(x=oral, y=nasal, color=gender)) +
  geom_point(alpha=0.5) +
  geom_smooth(method="gam") +
  geom_abline(lty=2, alpha=0.5) +
  xlim(0,1) + ylim(0,1) + coord_fixed() +
  facet_wrap(~corpus_dialect, ncol = 6)
```


## Model predictions
```{r}
# these were all generated with the script predicted_dataframes.R
predicted_sp <- readRDS("../data/predicted_dataframes/predicted_sp.rds")
predicted_av <- readRDS("../data/predicted_dataframes/predicted_av.rds")
fitted_sp <- readRDS("../data/predicted_dataframes/fitted_sp.rds")
fitted_av <- readRDS("../data/predicted_dataframes/fitted_av.rds")
```

# Euclidean distances
```{r}
euclidean_dists_av <- fitted_av %>%
  dplyr::select(stressed_vowel, zF1, zF2, context, corpus, .draw) %>%
  pivot_wider(names_from="stressed_vowel", values_from=c("zF1", "zF2")) %>%
  mutate(eucl_dist = sqrt((zF1_i - zF1_e)^2 + (zF2_i - zF2_e)^2)) %>%
  mutate(dialect_broad=case_when(corpus %in% c("Raleigh_US_South",
                                               "SLAAP-NC-AA_African_American",
                                               "SLAAP-NC-misc_US_South",
                                               "SLAAP-NorthTown-Anglo_US_South",
                                               "SLAAP-NorthTown-Latinx_Latino_American",
                                               "WestVirginia_US_South") 
                                 ~ "US South",
                                 corpus %in% c("Buckeye_US_Midland",
                                               "Canadian-Prairies_rural_Canada_Prairies",
                                               "Canadian-Prairies_urban_Canada_Prairies",
                                               "Kansas_Latino_American",
                                               "Kansas_US_Midland",
                                               "SLAAP-Ohio_US_Inland_North",
                                               "SLAAP-Ohio_US_Midland",
                                               "Sunset_US_West",
                                               "UBC_Canada_British_Columbia",
                                               "WestVirginia_US_Midland")
                                 ~ "North Am.",
                                 corpus %in% c("Devon_NA", 
                                               "Hastings_England_East",
                                               "ModernRP_Standard_Southern_British_English",
                                               "OLIVE_England_Merseyside",
                                               "OLIVE_England_West_Central") 
                                 ~ "England",
                                 corpus %in% c("SCOTS_Scotland_Central",
                                               "SCOTS_Scotland_East",
                                               "SCOTS_Scotland_Northern",
                                               "SOTC_Scotland_West") 
                                 ~ "Scotland")) %>%
  mutate(dialect_broad=factor(dialect_broad, 
                              levels=c("US South", "North Am.", "England", "Scotland")))

euclidean_dists_sp <- fitted_sp %>%
  dplyr::select(stressed_vowel, zF1, zF2, context, corpus, speaker, .draw) %>%
  pivot_wider(names_from="stressed_vowel", values_from=c("zF1", "zF2")) %>%
  mutate(eucl_dist = sqrt((zF1_i - zF1_e)^2 + (zF2_i - zF2_e)^2)) %>%
  mutate(dialect_broad=case_when(corpus %in% c("Raleigh_US_South",
                                               "SLAAP-NC-AA_African_American",
                                               "SLAAP-NC-misc_US_South",
                                               "SLAAP-NorthTown-Anglo_US_South",
                                               "SLAAP-NorthTown-Latinx_Latino_American",
                                               "WestVirginia_US_South") 
                                 ~ "US South",
                                 corpus %in% c("Buckeye_US_Midland",
                                               "Canadian-Prairies_rural_Canada_Prairies",
                                               "Canadian-Prairies_urban_Canada_Prairies",
                                               "Kansas_Latino_American",
                                               "Kansas_US_Midland",
                                               "SLAAP-Ohio_US_Inland_North",
                                               "SLAAP-Ohio_US_Midland",
                                               "Sunset_US_West",
                                               "UBC_Canada_British_Columbia",
                                               "WestVirginia_US_Midland")
                                 ~ "North Am.",
                                 corpus %in% c("Devon_NA", 
                                               "Hastings_England_East",
                                               "ModernRP_Standard_Southern_British_English",
                                               "OLIVE_England_Merseyside",
                                               "OLIVE_England_West_Central") 
                                 ~ "England",
                                 corpus %in% c("SCOTS_Scotland_Central",
                                               "SCOTS_Scotland_East",
                                               "SCOTS_Scotland_Northern",
                                               "SOTC_Scotland_West") 
                                 ~ "Scotland")) %>%
  mutate(dialect_broad=factor(dialect_broad, 
                              levels=c("US South", "North Am.", "England", "Scotland")))
```


Start here to load data!!!
# Bhattacharyya affinities
```{r}
# generated with the script BA_calc_external.R
bhattacharyya_affs_av <- readRDS("../data/BA_calcs/bhattacharyya_affs_av.rds") %>%
  mutate(dialect_broad=case_when(corpus %in% c("Raleigh_US_South",
                                               "SLAAP-NC-AA_African_American",
                                               "SLAAP-NC-misc_US_South",
                                               "SLAAP-NorthTown-Anglo_US_South",
                                               "SLAAP-NorthTown-Latinx_Latino_American",
                                               "WestVirginia_US_South") 
                                 ~ "US South",
                                 corpus %in% c("Buckeye_US_Midland",
                                               "Canadian-Prairies_rural_Canada_Prairies",
                                               "Canadian-Prairies_urban_Canada_Prairies",
                                               "Kansas_Latino_American",
                                               "Kansas_US_Midland",
                                               "SLAAP-Ohio_US_Inland_North",
                                               "SLAAP-Ohio_US_Midland",
                                               "Sunset_US_West",
                                               "UBC_Canada_British_Columbia",
                                               "WestVirginia_US_Midland")
                                 ~ "North Am.",
                                 corpus %in% c("Devon_NA", 
                                               "Hastings_England_East",
                                               "ModernRP_Standard_Southern_British_English",
                                               "OLIVE_England_Merseyside",
                                               "OLIVE_England_West_Central") 
                                 ~ "England",
                                 corpus %in% c("SCOTS_Scotland_Central",
                                               "SCOTS_Scotland_East",
                                               "SCOTS_Scotland_Northern",
                                               "SOTC_Scotland_West") 
                                 ~ "Scotland")) %>%
  mutate(dialect_broad=factor(dialect_broad, 
                              levels=c("Scotland", "US South", "England", "North Am.")))

bhattacharyya_affs_sp <- readRDS("../data/BA_calcs/bhattacharyya_affs_sp.rds") %>%
  mutate(dialect_broad=case_when(corpus %in% c("Raleigh_US_South",
                                               "SLAAP-NC-AA_African_American",
                                               "SLAAP-NC-misc_US_South",
                                               "SLAAP-NorthTown-Anglo_US_South",
                                               "SLAAP-NorthTown-Latinx_Latino_American",
                                               "WestVirginia_US_South") 
                                 ~ "US South",
                                 corpus %in% c("Buckeye_US_Midland",
                                               "Canadian-Prairies_rural_Canada_Prairies",
                                               "Canadian-Prairies_urban_Canada_Prairies",
                                               "Kansas_Latino_American",
                                               "Kansas_US_Midland",
                                               "SLAAP-Ohio_US_Inland_North",
                                               "SLAAP-Ohio_US_Midland",
                                               "Sunset_US_West",
                                               "UBC_Canada_British_Columbia",
                                               "WestVirginia_US_Midland")
                                 ~ "North Am.",
                                 corpus %in% c("Devon_NA", 
                                               "Hastings_England_East",
                                               "ModernRP_Standard_Southern_British_English",
                                               "OLIVE_England_Merseyside",
                                               "OLIVE_England_West_Central") 
                                 ~ "England",
                                 corpus %in% c("SCOTS_Scotland_Central",
                                               "SCOTS_Scotland_East",
                                               "SCOTS_Scotland_Northern",
                                               "SOTC_Scotland_West") 
                                 ~ "Scotland")) %>%
  mutate(dialect_broad=factor(dialect_broad, 
                              levels=c("Scotland", "US South", "England", "North Am.")))
```

# Calculate CredI's
```{r}
euclidean_dists_summary <- euclidean_dists_av %>%
  pivot_wider(names_from="context", 
              values_from=c("eucl_dist", "zF1_i", "zF2_i", "zF1_e", "zF2_e")) %>%
  mutate(eucl_dist_diff=eucl_dist_nasal-eucl_dist_oral) 

euclidean_dists_summary_wide <- euclidean_dists_summary %>%
  group_by(corpus) %>%
  mean_qi(.exclude = c(".draw")) %>%
  ungroup()

euclidean_dists_summary_long <- euclidean_dists_summary %>%
  dplyr::select(corpus, .draw, eucl_dist_nasal, eucl_dist_oral, eucl_dist_diff) %>%
  pivot_longer(cols=c("eucl_dist_oral", "eucl_dist_nasal", "eucl_dist_diff"), 
               names_to="context",
               names_prefix="eucl_dist_") %>%
  rename(eucl_dist="value") %>%
  group_by(corpus, context) %>%
  mean_qi(.exclude = c(".draw")) %>%
  ungroup()
```


Also need to run these lines
```{r}
bhattacharyya_affs_summary <- bhattacharyya_affs_av %>%
  pivot_wider(names_from="context", values_from=c("bhatt_aff")) %>%
  rename(bhatt_aff_oral="oral", bhatt_aff_nasal="nasal") %>%
  mutate(bhatt_aff_diff=bhatt_aff_nasal-bhatt_aff_oral,
         bhatt_aff_sum=bhatt_aff_nasal+bhatt_aff_oral) 

bhattacharyya_affs_summary_wide <- bhattacharyya_affs_summary %>%
  group_by(corpus, dialect_broad) %>%
  mean_qi(.exclude = c(".draw")) %>%
  ungroup()

bhattacharyya_affs_summary_long <- bhattacharyya_affs_summary %>%
  pivot_longer(cols=c("bhatt_aff_oral", "bhatt_aff_nasal", 
                      "bhatt_aff_diff", "bhatt_aff_sum"), 
               names_to="context",
               names_prefix="bhatt_aff_") %>%
  rename(bhatt_aff="value") %>%
  group_by(corpus, dialect_broad, context) %>%
  mean_qi(.exclude = c(".draw")) %>%
  ungroup()
```





## Plots
```{r}
by_speaker_predicted <- list()
by_speaker_fitted <- list()
i = 1
for (corpus_name in unique(predicted_sp$corpus)){
  pl_fitted <- fitted_sp %>%  
    filter(corpus==corpus_name) %>%
    ggplot(aes(x=zF2, y=zF1)) +
    stat_ellipse(level=0.66, aes(color=stressed_vowel)) +
    facet_grid(context~speaker) +
    scale_x_reverse() + scale_y_reverse() + coord_fixed()
  by_speaker_fitted[[i]] = pl_fitted
  
  pl_pred <- predicted_sp %>%
    filter(corpus==corpus_name) %>%
    ggplot(aes(x=zF2, y=zF1)) +
    stat_ellipse(level=0.66, aes(color=stressed_vowel)) +
    facet_grid(context~speaker) +
    scale_x_reverse() + scale_y_reverse() + coord_fixed()
  by_speaker_predicted[[i]] = pl_pred
  i = i+1
}
by_speaker_fitted[[1]]/by_speaker_fitted[[2]]
by_speaker_predicted[[1]]/by_speaker_predicted[[2]]
```

```{r, fig.width=15, fig.height=10}
predicted_av %>%
  mutate(corpus=factor(corpus, levels=merge_order_cols, labels=merge_order_names), 
         stressed_vowel=factor(stressed_vowel, levels=c("i", "e"), labels=c("/ɪ/", "/ɛ/"))) %>%
  ggplot(aes(x=zF2, y=zF1)) +
  stat_ellipse(level=0.66, aes(color=context)) +
  facet_wrap(~corpus+stressed_vowel, nrow = 3) +
  scale_color_manual(values=c("#56B4E9", "#E69F00")) +
  scale_x_reverse() + scale_y_reverse() + coord_fixed() +
  theme_bw(base_size=10)
ggsave("../plots/F1_F2_vowel.png", width=15, height=10)
```

```{r, fig.width=15, fig.height=10}
predicted_av %>%
  mutate(corpus=factor(corpus, levels=merge_order_cols)) %>%
  ggplot(aes(x=zF2, y=zF1)) +
  stat_ellipse(level=0.66, aes(color=stressed_vowel)) +
  facet_wrap(~corpus + context, ncol = 10) +
  scale_color_manual(name="vowel", values=c("violetred4", "chocolate"), labels=c("/ɛ/", "/ɪ/")) +
  scale_x_reverse() + scale_y_reverse() + coord_fixed() +
  theme_bw(base_size=6)
ggsave("../plots/F1_F2_context.png", width=15, height=10)
```

```{r, fig.width=15}
predicted_sp %>%
  ggplot(aes(x=zF2, y=zF1)) +
  stat_ellipse(level=0.66, aes(color=stressed_vowel)) +
  facet_wrap(~corpus+context, ncol=6) +
  scale_x_reverse() + scale_y_reverse() + coord_fixed()
```

```{r}
predicted_av %>%
  ggplot(aes(x=zF2, y=zF1)) +
  stat_ellipse(level=0.66, aes(color=context)) +
  facet_grid(stressed_vowel~corpus) +
  scale_x_reverse() + scale_y_reverse() + coord_fixed()
```

```{r}
fitted_av %>%
  ggplot(aes(x=zF2, y=zF1)) +
  stat_ellipse(level=0.66, aes(color=stressed_vowel)) +
  facet_grid(context~corpus) +
  scale_x_reverse() + scale_y_reverse() + coord_fixed()
```

```{r}
fitted_av %>%
  ggplot(aes(x=zF2, y=zF1)) +
  stat_ellipse(level=0.66, aes(color=context)) +
  facet_grid(stressed_vowel~corpus) +
  scale_x_reverse() + scale_y_reverse() + coord_fixed()
```

```{r}
euclidean_dists_av %>%
  mutate(corpus=factor(corpus, levels=merge_order_cols)) %>%
  ggplot(aes(x=eucl_dist)) +
  geom_density(alpha=0.5, aes(fill=context)) +
  facet_wrap(~corpus, scales="free_y")
```

```{r}
p1 <- euclidean_dists_sp %>% 
  filter(corpus=="Devon_NA") %>%
  ggplot(aes(x=eucl_dist)) +
  geom_density(alpha=0.5, aes(fill=context)) +
  facet_wrap(~speaker)
  
p2 <- euclidean_dists_sp %>% 
  filter(corpus=="SLAAP-NorthTown-Anglo_US_South") %>%
  ggplot(aes(x=eucl_dist)) +
  geom_density(alpha=0.5, aes(fill=context)) +
  facet_wrap(~speaker)

p1/p2
```

```{r, fig.width=15, fig.height=15, fig.align="right"}
bhattacharyya_affs_sp %>%
  mutate(corpus=factor(corpus, levels=merge_order_cols, labels=merge_order_names)) %>%
  dplyr::select(context, bhatt_aff, speaker, corpus, dialect_broad) %>%
  group_by(speaker, context) %>%
  summarise(bhatt_aff = mean(bhatt_aff),
            corpus = first(corpus),
            dialect_broad = first(dialect_broad)) %>%
  ungroup() %>%
  pivot_wider(names_from="context", values_from="bhatt_aff")%>%
  ggplot(aes(x=oral, y=nasal, color=dialect_broad)) +
  geom_point(alpha=0.5, size=1, show.legend=FALSE) +
  facet_wrap(~corpus) +
  geom_abline(lty=3) +
  coord_fixed(ratio=1, xlim=c(0, 1), ylim=c(0, 1), expand=FALSE, clip='on') +
  xlab("Preoral overlap (BA)") +
  ylab("Prenasal overlap (BA)") +
  theme_bw(base_size=10) + 
  scale_color_manual(values=c("#A2A475", "#D8B70A", "#972D15", "#02401B")) +
  theme(axis.text.x=element_text(angle=90, vjust=0.5),
        # text=element_text(size=16),
        # axis.title=element_text(size=32),
        panel.spacing=unit(4, units='mm'),
        # strip.text=element_text(size=10),
        legend.title=element_blank())
ggsave("../plots/labphon_dialect_plot.png", width=18, height=18, units="cm")
# ggsave("../plots/asa_ba_dialect_plot.png", width=30, height=30, units="cm")
# ggsave("../plots/moth_dialect_plot.png", width=18, height=18, units="cm")
  # ggExtra::ggMarginal(type='density')
  
# ggMarginal(pl, type="histogram")

# ggExtra::ggMarginal(pl, type = 'histogram') 
# ggsave("../plots/expanded_scatter_bhatt.png", width=15, height=15)
```
```{r}
euclidean_dists_sp %>%
  mutate(corpus=factor(corpus, levels=merge_order_cols, labels=merge_order_names)) %>%
  dplyr::select(context, eucl_dist, speaker, corpus, dialect_broad) %>%
  group_by(speaker, context) %>%
  summarise(eucl_dist = mean(eucl_dist),
            corpus = first(corpus),
            dialect_broad = first(dialect_broad)) %>%
  ungroup() %>%
  pivot_wider(names_from="context", values_from="eucl_dist")%>%
  ggplot(aes(x=oral, y=nasal, color=dialect_broad)) +
  geom_point(alpha=0.5, size=3) +
  facet_wrap(~corpus) +
  geom_abline(lty=3) +
  coord_fixed(ratio=1, xlim=c(0, 2), ylim=c(0, 2), expand=FALSE, clip='on') +
  xlab("Preoral Euclidean distance") +
  ylab("Prenasal Euclidean distance") +
  scale_color_manual(values=c("#D8B70A", "#02401B", "#A2A475", "#972D15")) +
  theme_bw(base_size=10) + 
  theme(axis.text.x=element_text(angle=90, vjust=0.5),
        text=element_text(size=20),
        # axis.title=element_text(size=32),
        panel.spacing=unit(4, units='mm'),
        strip.text=element_text(size=15),
        legend.title=element_blank())
ggsave("../plots/asa_ed_dialect_plot.png", width=30, height=30, units="cm")
```


```{r}
bhattacharyya_affs_sp %>%
  mutate(corpus=factor(corpus, levels=merge_order_cols, labels=merge_order_names)) %>%
  dplyr::select(context, bhatt_aff, speaker, corpus, dialect_broad) %>%
  group_by(speaker, context) %>%
  summarise(bhatt_aff = mean(bhatt_aff),
            corpus = first(corpus),
            dialect_broad = first(dialect_broad)) %>%
  ungroup() %>%
  pivot_wider(names_from="context", values_from="bhatt_aff")%>%
  ggplot(aes(x=oral, y=nasal, color=dialect_broad)) +
  geom_abline(lty=3) +
  geom_point(alpha=0.5, show.legend=FALSE) +
  xlab("Preoral overlap (BA)") +
  ylab("Prenasal overlap (BA)") +
  scale_color_manual(values=c("#A2A475", "#D8B70A", "#972D15", "#02401B")) +
  coord_fixed(ratio=1, xlim=c(0, 1), ylim=c(0, 1), expand=FALSE, clip='on') +
  theme_bw(base_size=16) + 
  theme(# axis.text.x=element_text(angle=90, vjust=0.5),
        # axis.title=element_blank(),
        legend.title=element_blank(), 
        plot.margin=margin(t=4, r=12, b=0, l=0, unit="pt"))
ggsave("../plots/labphon_all_dialects_speaker.png", width=14.5, height=14, units='cm')
```

```{r, fig.width=15, fig.height=10, fig.align="right"}
diamond <- data.frame(x=c(0, sqrt(2)/2, sqrt(2), sqrt(2)/2, 0), 
                      y=c(0, sqrt(2)/2, 0, -sqrt(2)/2, 0))
bhattacharyya_affs_sp %>%
  mutate(corpus=factor(corpus, levels=merge_order_cols, labels=merge_order_names)) %>%
  dplyr::select(context, bhatt_aff, speaker, corpus) %>%
  group_by(speaker, context) %>%
  summarise(bhatt_aff = mean(bhatt_aff),
            corpus = first(corpus)) %>%
  ungroup() %>%
  pivot_wider(names_from="context", values_from="bhatt_aff")%>%
  ggplot(aes(x=(oral+nasal)/sqrt(2), y=(nasal-oral)/sqrt(2))) +
  geom_point(alpha=0.25) +
  facet_wrap(~corpus) +
  # coord_cartesian(xlim=c(0, sqrt(2)), ylim=c(-0.1, sqrt(2)/2), expand=FALSE) +
  geom_hline(lty=2, yintercept=0) + # points falling on this line have equal prenasal and preoral BA
  # geom_abline(intercept=sqrt(2), slope=-1) +
  # geom_abline(intercept=0, slope=1) +
  # theme(aspect.ratio=1) +
  geom_path(data=diamond, aes(x=x, y=y, label=NA)) +
  coord_fixed(ratio=1, xlim=c(0, sqrt(2)), ylim=c(-0.1, sqrt(2)/2), expand=FALSE) +
  theme_bw(base_size=10)

  # ggExtra::ggMarginal(type='density')
  
# ggMarginal(pl, type="histogram")

# ggExtra::ggMarginal(pl, type = 'histogram') 
ggsave("../plots/expanded_scatter_rotated_bhatt.png", width=15, height=10)
```

```{r, fig.width=15, fig.height=15, fig.align="right"}
euclidean_dists_sp %>%
  mutate(corpus=factor(corpus, levels=merge_order_cols)) %>%
  dplyr::select(context, eucl_dist, speaker, corpus) %>%
  group_by(speaker, context) %>%
  summarise(eucl_dist = mean(eucl_dist),
            corpus = first(corpus)) %>%
  ungroup() %>%
  pivot_wider(names_from="context", values_from="eucl_dist") %>%
  ggplot(aes(x=oral, y=nasal)) +
  geom_point() +
  facet_wrap(~corpus) +
  geom_abline(lty=2) +
  xlim(0,1.5) + ylim(0,1.5) + coord_fixed() +
  theme_bw(base_size=10)
ggsave("../plots/expanded_scatter_eucl.png", width=15, height=15)
```

```{r, fig.width=15, fig.height=10, fig.align="right"}
bhattacharyya_affs_av %>%
  mutate(corpus=factor(corpus, levels=merge_order_cols)) %>%
  ggplot(aes(x=bhatt_aff, fill=context)) +
  geom_density(alpha=0.5) +
  facet_wrap(~corpus, scales="free_y") +
  xlim(0, 1) +
  scale_fill_manual(values=c("#56B4E9", "#E69F00")) +
  theme_bw(base_size=10)
```

```{r, fig.width=15, fig.height=10, fig.align="right"}
bhattacharyya_affs_sp %>%
  mutate(corpus=factor(corpus, levels=merge_order_cols, labels=merge_order_names)) %>%
  group_by(speaker, context, corpus) %>%
  summarize(bhatt_aff = mean(bhatt_aff)) %>%
  ggplot(aes(x=bhatt_aff, fill=context)) +
  geom_density(alpha=0.5, size=0.2) +
  facet_wrap(~corpus, nrow=3, scales="free_y", dir="v") +
  xlim(0, 1) +
  xlab("Bhattacharyya Affinity") +
  scale_fill_manual(values=c("#56B4E9", "#E69F00")) +
  theme_bw(base_size=9) +
  theme(axis.text.y=element_blank(), 
        axis.ticks.y=element_blank(),
        axis.title.y=element_blank(),
        axis.text.x=element_text(size=6, angle=90, vjust=0.5),
        strip.text=element_text(size=6),
        legend.position = c(0.95, 0.3),
        panel.spacing=unit(0.5, 'mm'))
# ggsave("../plots/bhatt_distr_speaker.png", width=15, height=10)
ggsave("../plots/bhatt_distr_speaker_new.png", width=16, height=7, units='cm')
```

```{r, fig.width=15, fig.height=10, fig.align="right"}
euclidean_dists_av %>%
  mutate(corpus=factor(corpus, levels=merge_order_cols)) %>%
  ggplot(aes(x=eucl_dist, fill=context)) +
  geom_density(alpha=0.5) +
  facet_wrap(~corpus, scales="free_y") +
  scale_fill_manual(values=c("#56B4E9", "#E69F00")) +
  theme_bw(base_size=10)
```

```{r, fig.width=15, fig.height=10, fig.align="right"}
euclidean_dists_sp %>%
  mutate(corpus=factor(corpus, levels=merge_order_cols)) %>%
  group_by(speaker, context, corpus) %>%
  summarize(eucl_dist = mean(eucl_dist)) %>%
  ggplot(aes(x=eucl_dist, fill=context)) +
  geom_density(alpha=0.5) +
  facet_wrap(~corpus, scales="free_y") +
  scale_fill_manual(values=c("#56B4E9", "#E69F00")) +
  theme_bw(base_size=10) +
  guides(lty = guide_legend(override.aes = list(col = 'gray35')))
```

# BA prenasally
```{r, fig.width=10, fig.height=5, fig.align="right"}
bhattacharyya_affs_summary_wide %>%
  ggplot(aes(x=reorder(corpus, bhatt_aff_nasal))) +
  geom_pointrange(alpha=0.5,
                  aes(color="#56B4E9",
                      y=bhatt_aff_nasal,
                      ymin=bhatt_aff_nasal.lower, 
                      ymax=bhatt_aff_nasal.upper)) +
  theme_bw() +
  xlab("corpus") + ylab("Bhattacharyya Affinity") +
  theme(text=element_text(size=9), 
        axis.text.x=element_text(angle=45, hjust=1), 
        legend.position="left") +
  scale_color_manual(name='context', 
                     values =c('#56B4E9'='#56B4E9'),
                     guide='legend',
                     labels = c('nasal'))
ggsave("../plots/expanded_nasal_bhatt_CredI.png", width=10, height=5)
```

```{r, fig.width=10, fig.height=5, fig.align="right"}
bhattacharyya_affs_summary_wide %>%
  ggplot(aes(x=reorder(corpus, bhatt_aff_oral))) +
  geom_pointrange(alpha=0.5, size=1,
                  aes(color="#E69F00",
                      y=bhatt_aff_oral, 
                      ymin=bhatt_aff_oral.lower, 
                      ymax=bhatt_aff_oral.upper)) +
  theme_bw() +
  xlab("corpus") + ylab("Bhattacharyya Affinity") +
  theme(text=element_text(size=9), 
        axis.text.x=element_text(angle=45, hjust=1), 
        legend.position="left") +
  scale_color_manual(name='context', 
                     values =c('#E69F00'='#E69F00'),
                     guide='legend',
                     labels = c('oral'))
ggsave("../plots/expanded_oral_bhatt_CredI.png", width=10, height=5)
```

```{r, fig.width=10, fig.height=5, fig.align="right"}
bhattacharyya_affs_summary_wide %>%
  ggplot(aes(x=reorder(corpus, bhatt_aff_nasal))) +
  geom_pointrange(alpha=0.5,
                  aes(color="#56B4E9",
                      y=bhatt_aff_nasal,
                      ymin=bhatt_aff_nasal.lower, 
                      ymax=bhatt_aff_nasal.upper)) +
  geom_pointrange(alpha=0.5,
                  aes(color="#E69F00",
                      y=bhatt_aff_oral,
                      ymin=bhatt_aff_oral.lower, 
                      ymax=bhatt_aff_oral.upper)) +
  theme_bw() +
  xlab("corpus") + ylab("Bhattacharyya Affinity") +
  theme(text=element_text(size=9), 
        axis.text.x=element_text(angle=45, hjust=1), 
        legend.position="left") +
  scale_color_manual(name='context', 
                     values =c('#56B4E9'='#56B4E9', '#E69F00'='#E69F00'),
                     guide='legend',
                     labels = c('nasal', 'oral')) 
ggsave("../plots/expanded_nasal_oral_bhatt_CredI.png", width=10, height=5)
```

```{r, fig.width=10, fig.height=5, fig.align="right"}
bhattacharyya_affs_summary_wide %>%
  ggplot(aes(x=reorder(corpus, bhatt_aff_oral))) +
  geom_pointrange(alpha=0.5,
                  aes(color="#56B4E9",
                      y=bhatt_aff_nasal,
                      ymin=bhatt_aff_nasal.lower, 
                      ymax=bhatt_aff_nasal.upper)) +
  geom_pointrange(alpha=0.5,
                  aes(color="#E69F00",
                      y=bhatt_aff_oral,
                      ymin=bhatt_aff_oral.lower, 
                      ymax=bhatt_aff_oral.upper)) +
  theme_bw() +
  xlab("corpus") + ylab("Bhattacharyya Affinity") +
  theme(text=element_text(size=9), 
        axis.text.x=element_text(angle=45, hjust=1), 
        legend.position="left") +
  scale_color_manual(name='context', 
                     values =c('#56B4E9'='#56B4E9', '#E69F00'='#E69F00'),
                     guide='legend',
                     labels = c('nasal', 'oral')) 
ggsave("../plots/expanded_oral_nasal_bhatt_CredI.png", width=10, height=5)
```

```{r, fig.width=10, fig.height=5, fig.align="right"}
bhattacharyya_affs_summary_wide %>%
  ggplot(aes(x=reorder(corpus, bhatt_aff_diff))) +
  geom_pointrange(alpha=0.5, size=1,
                  aes(color="green4",
                      y=bhatt_aff_diff, 
                      ymin=bhatt_aff_diff.lower, 
                      ymax=bhatt_aff_diff.upper)) +
  theme_bw() +
  xlab("corpus") + ylab("Bhattacharyya Affinity") +
  theme(text=element_text(size=9), 
        axis.text.x=element_text(angle=45, hjust=1), 
        legend.position="left") +
  scale_color_manual(name='context', 
                     values =c('green4'='green4'),
                     guide='legend',
                     labels = c('diff   '))
ggsave("../plots/expanded_diff_bhatt_CredI.png", width=10, height=5)
```

```{r, fig.width=10, fig.height=5, fig.align="right"}
bhattacharyya_affs_summary_wide %>%
  ggplot(aes(x=reorder(corpus, bhatt_aff_diff))) +
  geom_pointrange(alpha=0.5,
                  aes(color="green4",
                      y=bhatt_aff_diff, 
                      ymin=bhatt_aff_diff.lower, 
                      ymax=bhatt_aff_diff.upper)) +
  geom_pointrange(alpha=0.5,
                  aes(color="#E69F00",
                      y=bhatt_aff_oral, 
                      ymin=bhatt_aff_oral.lower, 
                      ymax=bhatt_aff_oral.upper)) +
  theme_bw() +
  xlab("corpus") + ylab("Bhattacharyya Affinity") +
  theme(text=element_text(size=9), 
        axis.text.x=element_text(angle=45, hjust=1), 
        legend.position="left") +
  scale_color_manual(name='context', 
                     values =c('#E69F00'='#E69F00', 'green4'='green4'),
                     guide='legend',
                     labels = c('oral', 'diff    '))
ggsave("../plots/expanded_diff_oral_bhatt_CredI.png", width=10, height=5)
```


```{r, fig.width=10, fig.height=5, fig.align="right"}
bhattacharyya_affs_summary_wide %>%
  ggplot(aes(x=reorder(corpus, bhatt_aff_diff))) +
  geom_pointrange(alpha=0.5,
                  aes(color="green4",
                      y=bhatt_aff_diff, 
                      ymin=bhatt_aff_diff.lower, 
                      ymax=bhatt_aff_diff.upper)) +
  geom_pointrange(alpha=0.5,
                  aes(y=bhatt_aff_nasal,
                      color="#56B4E9",
                      ymin=bhatt_aff_nasal.lower, 
                      ymax=bhatt_aff_nasal.upper)) +
  theme_bw() +
  xlab("corpus") + ylab("Bhattacharyya Affinity") +
  theme(text=element_text(size=9), 
        axis.text.x=element_text(angle=45, hjust=1), 
        legend.position="left") +
  scale_color_manual(name='context', 
                     values =c('#56B4E9'='#56B4E9', 'green4'='green4'),
                     guide='legend',
                     labels = c('nasal', 'diff')) 
ggsave("../plots/expanded_diff_nasal_bhatt_CredI.png", width=10, height=5)
```


```{r, fig.width=10, fig.height=5, fig.align="right"}
bhattacharyya_affs_summary_wide %>%
  ggplot(aes(x=reorder(corpus, bhatt_aff_diff))) +
  geom_pointrange(alpha=0.5,
                  aes(color="green4",
                      y=bhatt_aff_diff,
                      ymin=bhatt_aff_diff.lower, 
                      ymax=bhatt_aff_diff.upper)) +
  geom_pointrange(alpha=0.5,
                  aes(color="#56B4E9",
                      y=bhatt_aff_nasal,
                      ymin=bhatt_aff_nasal.lower, 
                      ymax=bhatt_aff_nasal.upper)) +
  geom_pointrange(alpha=0.5,
                  aes(color="#E69F00",
                      y=bhatt_aff_oral,
                      ymin=bhatt_aff_oral.lower, 
                      ymax=bhatt_aff_oral.upper)) +
  theme_bw() +
  xlab("corpus") + ylab("Bhattacharyya Affinity") +
  theme(text=element_text(size=9), 
        axis.text.x=element_text(angle=45, hjust=1), 
        legend.position="left") +
  scale_color_manual(name='context', 
                     values =c('#56B4E9'='#56B4E9', '#E69F00'='#E69F00', 'green4'='green4'),
                     guide='legend',
                     labels = c('nasal', 'oral', 'diff')) 
ggsave("../plots/expanded_diff_nasal_oral_bhatt_CredI.png", width=10, height=5)
```

```{r}
(bhattacharyya_affs_summary_wide %>%
  ggplot(aes(x=bhatt_aff_oral, y=bhatt_aff_nasal)) +
  geom_point()) %>% 
  ggMarginal(type='density')
```

```{r}
corpus_widths <- bhattacharyya_affs_sp %>% 
  group_by(corpus, context, .draw) %>%
  summarise(width.lower=qi(bhatt_aff)[1],
            width.upper=qi(bhatt_aff)[2]) %>%
  mutate(width=width.upper-width.lower) %>%
  ungroup() %>%
  dplyr::select(corpus, context, width) %>%
  group_by(corpus, context) %>%
  mean_qi()

corpus_width_diffs <- corpus_widths %>%
  dplyr::select(corpus, context, width) %>% 
  pivot_wider(names_from="context", values_from="width") %>%
  mutate(diff=nasal-oral) %>%
  dplyr::select(corpus, diff)

corpus_widths <- corpus_widths %>%
  left_join(corpus_width_diffs, by="corpus")
```
  
```{r, fig.width=10, fig.height=5, fig.align="right"}
corpus_widths %>%
  mutate(corpus=factor(corpus, levels=merge_order_cols, labels=merge_order_names)) %>%
  ggplot(aes(x=reorder(corpus, -diff), y=width, color=context)) +
  geom_pointrange(alpha=0.5, size=1, aes(ymin=.lower, ymax=.upper)) +
  # geom_point(alpha=0.5, size=5) +
  theme_bw() +
  xlab("corpus") + ylab("width of 95% CredI across speakers") +
  theme(text=element_text(size=10), 
        axis.text.x=element_text(angle=45, hjust=1), 
        legend.position="left") +
  scale_color_manual(values=c('#56B4E9', '#E69F00'))
ggsave("../plots/expanded_widths.png", width=10, height=5)
```

```{r, fig.width=4, fig.height=4, fig.align="right"}
delta <- 0.01
triangle <- data.frame(x=c(0.4, 1-delta, 0.4), y=c(0, 0, 0.6-delta))

bhattacharyya_affs_summary_wide %>%
  mutate(corpus=factor(corpus, levels=merge_order_cols, labels=merge_order_names)) %>%
  ggplot(aes(x=bhatt_aff_oral, y=bhatt_aff_diff, label=corpus)) +
  geom_polygon(data=triangle, aes(x=x, y=y, label=NA), fill="dodgerblue4", alpha=0.25) +
  geom_point(size=2, alpha=0.5) +
  geom_linerange(lty=2, 
                 alpha=0.5, 
                 size=0.1,
                 aes(ymin=bhatt_aff_diff.lower, 
                     ymax=bhatt_aff_diff.upper)) +
  geom_linerange(lty=2, 
                 alpha=0.5,
                 size=0.1,
                 aes(xmin=bhatt_aff_oral.lower, 
                     xmax=bhatt_aff_oral.upper)) +
  geom_text_repel(size=unit(2, 'pt')) +
  xlab("Preoral BA") + ylab("Prenasal BA – Preoral BA") +
  geom_abline(intercept=1, slope=-1, alpha=0.5) +
  theme_bw(base_size=9) +
  coord_fixed(ylim=c(-0.1, 0.6), xlim=c(0.3, 1),
              clip="on") +
  theme(text=element_text(size=9))

ggsave("../plots/bhatt_oral_by_diff_new.png", width=10, height=10, units='cm')
```

```{r, fig.width=10, fig.height=10, fig.align="right"}
trapezoid <- data.frame(x=c(0.4, 1, 0.6, 0.4), y=c(0.4+delta, 1+delta, 1, 0.8))

bhattacharyya_affs_summary_wide %>%
  mutate(corpus=factor(corpus, levels=merge_order_cols, labels=merge_order_names)) %>%
  ggplot(aes(x=bhatt_aff_oral, y=bhatt_aff_nasal, label=corpus)) +
  geom_polygon(data=trapezoid, aes(x=x, y=y, label=NA), fill="dodgerblue4", alpha=0.25) +
  geom_point(size=5, alpha=0.5) +
  geom_linerange(lty=2, alpha=0.5, 
                 aes(ymin=bhatt_aff_nasal.lower, 
                     ymax=bhatt_aff_nasal.upper)) +
  geom_linerange(lty=2, alpha=0.5,
                 aes(xmin=bhatt_aff_oral.lower, 
                     xmax=bhatt_aff_oral.upper)) +
  geom_text_repel() +
  xlab("Preoral BA") + ylab("Prenasal BA") +
  geom_abline(alpha=0.5, lty=2) +
  theme_bw() +
  coord_fixed()
ggsave("../plots/bhatt_oral_by_nasal.png", width=10, height=10)
```

```{r}
bhattacharyya_affs_sp %>%
  mutate(corpus=factor(corpus, levels=merge_order_cols, labels=merge_order_names)) %>%
  dplyr::select(context, bhatt_aff, speaker, corpus) %>%
  group_by(speaker, context) %>%
  summarise(bhatt_aff = mean(bhatt_aff),
            corpus = first(corpus)) %>%
  ungroup() %>%
  pivot_wider(names_from="context", values_from="bhatt_aff")%>%
  ggplot(aes(x=oral, y=nasal)) +
  geom_point(size=3,
             alpha=0.5,
             data=bhattacharyya_affs_summary_wide, 
             aes(x=bhatt_aff_oral, y=bhatt_aff_nasal)) +
  stat_ellipse(level=0.89, geom='polygon', fill='red', alpha=0.1, aes(group=corpus)) +
  # facet_wrap(~corpus) +
  geom_abline(lty=3) +
  coord_fixed(ratio=1, xlim=c(0, 1), ylim=c(0, 1), expand=FALSE, clip='on') +
  theme_bw(base_size=10) + 
  theme(axis.text.x=element_text(angle=90, vjust=0.5),
        axis.title=element_blank())
ggsave("../plots/moth_by_corpus_speakers.png", width=12, height=12, units='cm')
```
```{r}
bhattacharyya_affs_summary_wide %>%
  mutate(corpus=factor(corpus, levels=merge_order_cols, labels=merge_order_names)) %>%
  ggplot(aes(x=bhatt_aff_oral, y=bhatt_aff_nasal, label=corpus)) +
  geom_point(size=3, alpha=0.5) +
  # stat_ellipse(alpha=0.1,
  #              level=0.95,
  #              data=bhattacharyya_affs_av %>%
  #                pivot_wider(names_from=context, values_from=bhatt_aff),
  #              aes(x=oral, y=nasal, group=corpus)) +
  xlab("Preoral BA") + ylab("Prenasal BA") +
  geom_abline(alpha=0.5, lty=3) +
  coord_fixed(ratio=1, xlim=c(0, 1), ylim=c(0, 1), expand=FALSE, clip='on') +
  theme_bw(base_size=10) + 
  theme(axis.text.x=element_text(angle=90, vjust=0.5),
        axis.title=element_blank())
ggsave("../plots/moth_by_corpus_shape.png", width=12, height=12, units='cm')
```


```{r}
bhattacharyya_affs_summary_wide %>%
  mutate(corpus=factor(corpus, levels=merge_order_cols, labels=merge_order_names)) %>%
  ggplot(aes(x=bhatt_aff_oral, y=bhatt_aff_nasal, label=corpus)) +
  geom_linerange(lty=2, alpha=0.2, 
                 aes(ymin=bhatt_aff_nasal.lower, 
                     ymax=bhatt_aff_nasal.upper)) +
  geom_linerange(lty=2, alpha=0.2,
                 aes(xmin=bhatt_aff_oral.lower, 
                     xmax=bhatt_aff_oral.upper)) +
  geom_point(size=3, alpha=0.5) +
  # stat_ellipse(alpha=0.1,
  #              level=0.95,
  #              data=bhattacharyya_affs_av %>%
  #                pivot_wider(names_from=context, values_from=bhatt_aff),
  #              aes(x=oral, y=nasal, group=corpus)) +
  xlab("Preoral BA") + ylab("Prenasal BA") +
  geom_abline(alpha=0.5, lty=3) +
  coord_fixed(ratio=1, xlim=c(0, 1), ylim=c(0, 1), expand=FALSE, clip='on') +
  theme_bw(base_size=10) + 
  theme(axis.text.x=element_text(angle=90, vjust=0.5),
        axis.title=element_blank())
ggsave("../plots/moth_by_corpus_errorbars.png", width=12, height=12, units='cm')
```
all dailacts, background triangle
```{r}
triangle2 <- data.frame(x=c(0.4, 1, 0.4), y=c(0.4, 1, 1))

bhattacharyya_affs_summary_wide %>%
  mutate(corpus=factor(corpus, levels=merge_order_cols, labels=merge_order_names)) %>%
  ggplot(aes(x=bhatt_aff_oral, y=bhatt_aff_nasal, color=dialect_broad)) +
  geom_polygon(data=triangle2, aes(x=x, y=y, color=NA), 
               fill="#81A88D", alpha=0.5, color="transparent", show.legend=FALSE) +
  geom_linerange(lty=2, alpha=0.25, 
                 aes(ymin=bhatt_aff_nasal.lower, 
                     ymax=bhatt_aff_nasal.upper),
                 show.legend=FALSE) +
  geom_linerange(lty=2, alpha=0.25,
                 aes(xmin=bhatt_aff_oral.lower, 
                     xmax=bhatt_aff_oral.upper),
                 show.legend=FALSE) +
  geom_point(size=3, alpha=0.5, show.legend=FALSE) +
  # stat_ellipse(alpha=0.1,
  #              level=0.95,
  #              data=bhattacharyya_affs_av %>%
  #                pivot_wider(names_from=context, values_from=bhatt_aff),
  #              aes(x=oral, y=nasal, group=corpus)) +
  xlab("Preoral BA") + ylab("Prenasal BA") +
  geom_abline(alpha=0.5, lty=3) +
  scale_color_manual(values=c("#A2A475", "#D8B70A", "#972D15", "#02401B")) +
  coord_fixed(ratio=1, xlim=c(0.25, 1), ylim=c(0.25, 1), expand=FALSE, clip='on') +
  theme_bw(base_size=16) + 
  theme(axis.text.x=element_text(angle=90, vjust=0.5),
        axis.title=element_blank(),
        legend.title=element_blank())
ggsave("../plots/labphon_by_corpus_background_triangle.png", width=14, height=14, units='cm')
```

all dialects, no background triangle
```{r}
bhattacharyya_affs_summary_wide %>%
  mutate(corpus=factor(corpus, levels=merge_order_cols, labels=merge_order_names)) %>%
  ggplot(aes(x=bhatt_aff_oral, y=bhatt_aff_nasal, color=dialect_broad)) +
  # geom_polygon(data=triangle2, aes(x=x, y=y, color=NA), 
  #              fill="#81A88D", alpha=0.5, color="transparent", show.legend=FALSE) +
  geom_linerange(lty=2, alpha=0.25, 
                 aes(ymin=bhatt_aff_nasal.lower, 
                     ymax=bhatt_aff_nasal.upper),
                 show.legend=FALSE) +
  geom_linerange(lty=2, alpha=0.25,
                 aes(xmin=bhatt_aff_oral.lower, 
                     xmax=bhatt_aff_oral.upper),
                 show.legend=FALSE) +
  geom_point(size=3, alpha=0.5, show.legend=FALSE) +
  # stat_ellipse(alpha=0.1,
  #              level=0.95,
  #              data=bhattacharyya_affs_av %>%
  #                pivot_wider(names_from=context, values_from=bhatt_aff),
  #              aes(x=oral, y=nasal, group=corpus)) +
  xlab("Preoral overlap (BA)") + ylab("Prenasal overlap (BA)") +
  geom_abline(alpha=0.5, lty=3) +
  scale_color_manual(values=c("#A2A475", "#D8B70A", "#972D15", "#02401B")) +
  coord_fixed(ratio=1, xlim=c(0.25, 1), ylim=c(0.25, 1), expand=FALSE, clip='on') +
  theme_bw(base_size=16) + 
  theme(# axis.text.x=element_text(angle=90, vjust=0.5),
        # axis.title=element_blank(),
        legend.text=element_text(size=16),
        plot.margin=margin(t=5, r=12, b=0, l=0, unit="pt"),
        legend.title=element_blank())
ggsave("../plots/labphon_by_corpus_triangle.png", width=14.5, height=14, units='cm')
```

Scottish only
```{r}
bhattacharyya_affs_summary_wide %>%
  filter(dialect_broad=="Scotland") %>%
  mutate(corpus=factor(corpus, levels=merge_order_cols, labels=merge_order_names)) %>%
  ggplot(aes(x=bhatt_aff_oral, y=bhatt_aff_nasal, color=dialect_broad)) +
  # geom_polygon(data=triangle2, aes(x=x, y=y, color=NA), 
  #              fill="#81A88D", alpha=0.5, color="transparent", show.legend=FALSE) +
  geom_linerange(lty=2, alpha=0.25, 
                 aes(ymin=bhatt_aff_nasal.lower, 
                     ymax=bhatt_aff_nasal.upper),
                 show.legend=FALSE) +
  geom_linerange(lty=2, alpha=0.25,
                 aes(xmin=bhatt_aff_oral.lower, 
                     xmax=bhatt_aff_oral.upper),
                 show.legend=FALSE) +
  geom_point(size=3, alpha=0.5, show.legend=FALSE) +
  # stat_ellipse(alpha=0.1,
  #              level=0.95,
  #              data=bhattacharyya_affs_av %>%
  #                pivot_wider(names_from=context, values_from=bhatt_aff),
  #              aes(x=oral, y=nasal, group=corpus)) +
  xlab("Preoral overlap (BA)") + ylab("Prenasal overlap (BA)") +
  geom_abline(alpha=0.5, lty=3) +
  scale_color_manual(values=c("#A2A475")) +
  coord_fixed(ratio=1, xlim=c(0.25, 1), ylim=c(0.25, 1), expand=FALSE, clip='on') +
  theme_bw(base_size=16) + 
  theme(# axis.text.x=element_text(angle=90, vjust=0.5),
        # axis.title=element_blank(),
        legend.title=element_blank(),
        plot.margin=margin(t=5, r=12, b=0, l=0, unit="pt"))
ggsave("../plots/labphon_Scottland_triangle.png", width=14.5, height=14, units='cm')
```

Scottish and Southern
```{r}
bhattacharyya_affs_summary_wide %>%
  filter(dialect_broad %in% c("US South", "Scotland")) %>%
  mutate(corpus=factor(corpus, levels=merge_order_cols, labels=merge_order_names)) %>%
  ggplot(aes(x=bhatt_aff_oral, y=bhatt_aff_nasal, color=dialect_broad)) +
  # geom_polygon(data=triangle2, aes(x=x, y=y, color=NA), 
  #              fill="#81A88D", alpha=0.5, color="transparent", show.legend=FALSE) +
  geom_linerange(lty=2, alpha=0.25, 
                 aes(ymin=bhatt_aff_nasal.lower, 
                     ymax=bhatt_aff_nasal.upper),
                 show.legend=FALSE) +
  geom_linerange(lty=2, alpha=0.25,
                 aes(xmin=bhatt_aff_oral.lower, 
                     xmax=bhatt_aff_oral.upper),
                 show.legend=FALSE) +
  geom_point(size=3, alpha=0.5, show.legend=FALSE) +
  # stat_ellipse(alpha=0.1,
  #              level=0.95,
  #              data=bhattacharyya_affs_av %>%
  #                pivot_wider(names_from=context, values_from=bhatt_aff),
  #              aes(x=oral, y=nasal, group=corpus)) +
  xlab("Preoral overlap (BA)") + ylab("Prenasal overlap (BA)") +
  geom_abline(alpha=0.5, lty=3) +
  scale_color_manual(values=c("#A2A475", "#D8B70A")) +
  coord_fixed(ratio=1, xlim=c(0.25, 1), ylim=c(0.25, 1), expand=FALSE, clip='on') +
  theme_bw(base_size=16) + 
  theme(# axis.text.x=element_text(angle=90, vjust=0.5),
        # axis.title=element_blank(),
        legend.title=element_blank(),
        plot.margin=margin(t=5, r=12, b=0, l=0, unit="pt"))
ggsave("../plots/labphon_Sc_So_triangle.png", width=14.5, height=14, units='cm')
```

Everything but NA
```{r}
bhattacharyya_affs_summary_wide %>%
  filter(dialect_broad %in% c("US South", "Scotland", "England")) %>%
  mutate(corpus=factor(corpus, levels=merge_order_cols, labels=merge_order_names)) %>%
  ggplot(aes(x=bhatt_aff_oral, y=bhatt_aff_nasal, color=dialect_broad)) +
  # geom_polygon(data=triangle2, aes(x=x, y=y, color=NA), 
  #              fill="#81A88D", alpha=0.5, color="transparent", show.legend=FALSE) +
  geom_linerange(lty=2, alpha=0.25, 
                 aes(ymin=bhatt_aff_nasal.lower, 
                     ymax=bhatt_aff_nasal.upper),
                 show.legend=FALSE) +
  geom_linerange(lty=2, alpha=0.25,
                 aes(xmin=bhatt_aff_oral.lower, 
                     xmax=bhatt_aff_oral.upper),
                 show.legend=FALSE) +
  geom_point(size=3, alpha=0.5, show.legend=FALSE) +
  # stat_ellipse(alpha=0.1,
  #              level=0.95,
  #              data=bhattacharyya_affs_av %>%
  #                pivot_wider(names_from=context, values_from=bhatt_aff),
  #              aes(x=oral, y=nasal, group=corpus)) +
  xlab("Preoral overlap (BA)") + ylab("Prenasal overlap (BA)") +
  geom_abline(alpha=0.5, lty=3) +
  scale_color_manual(values=c("#A2A475", "#D8B70A", "#972D15")) +
  coord_fixed(ratio=1, xlim=c(0.25, 1), ylim=c(0.25, 1), expand=FALSE, clip='on') +
  theme_bw(base_size=16) + 
  theme(# axis.text.x=element_text(angle=90, vjust=0.5),
        # axis.title=element_blank(),
        legend.title=element_blank(), 
        plot.margin=margin(t=5, r=12, b=0, l=0, unit="pt"))
ggsave("../plots/labphon_Sc_So_Eng_triangle.png", width=14.5, height=14, units='cm')
```

```{r}
bhattacharyya_affs_summary_wide %>%
  mutate(corpus=factor(corpus, levels=merge_order_cols, labels=merge_order_names)) %>%
  ggplot(aes(x=bhatt_aff_oral, y=bhatt_aff_nasal, label=corpus, color=dialect_broad)) +
  geom_linerange(lty=2, alpha=0.25, 
                 aes(ymin=bhatt_aff_nasal.lower, 
                     ymax=bhatt_aff_nasal.upper),
                 show.legend=FALSE) +
  geom_linerange(lty=2, alpha=0.25,
                 aes(xmin=bhatt_aff_oral.lower, 
                     xmax=bhatt_aff_oral.upper),
                 show.legend=FALSE) +
  geom_point(size=3, alpha=0.5, show.legend=FALSE) +
  scale_color_manual(values=c("#A2A475", "#D8B70A", "#972D15", "#02401B")) +
  # stat_ellipse(alpha=0.1,
  #              level=0.95,
  #              data=bhattacharyya_affs_av %>%
  #                pivot_wider(names_from=context, values_from=bhatt_aff),
  #              aes(x=oral, y=nasal, group=corpus)) +
  geom_text_repel(size=2, show.legend=FALSE) +
  xlab("Preoral overlap (BA)") + ylab("Prenasal overlap (BA)") +
  geom_abline(alpha=0.5, lty=3) +
  coord_fixed(ratio=1, xlim=c(0.25, 1), ylim=c(0.25, 1), expand=FALSE, clip='on') +
  theme_bw(base_size=16) + 
  theme(text=element_text(),
        # axis.text.x=element_text(angle=90, vjust=0.5),
        # axis.title=element_blank(),
        legend.title=element_blank(),
        plot.margin=margin(t=5, r=12, b=0, l=0, unit="pt"))
ggsave("../plots/labphon_by_corpus_labels.png", width=14.5, height=14, units='cm')
# ggsave("../plots/moth_by_corpus_labels.png", width=14, height=12, units='cm')
```



